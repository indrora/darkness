// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0--rc1
// source: distortion.proto

package ltpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Distortion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Polynomial *Distortion_Polynomial `protobuf:"bytes,1,opt,name=polynomial" json:"polynomial,omitempty"`
	Cra        *Distortion_CRA        `protobuf:"bytes,2,opt,name=cra" json:"cra,omitempty"`
}

func (x *Distortion) Reset() {
	*x = Distortion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distortion_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Distortion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Distortion) ProtoMessage() {}

func (x *Distortion) ProtoReflect() protoreflect.Message {
	mi := &file_distortion_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Distortion.ProtoReflect.Descriptor instead.
func (*Distortion) Descriptor() ([]byte, []int) {
	return file_distortion_proto_rawDescGZIP(), []int{0}
}

func (x *Distortion) GetPolynomial() *Distortion_Polynomial {
	if x != nil {
		return x.Polynomial
	}
	return nil
}

func (x *Distortion) GetCra() *Distortion_CRA {
	if x != nil {
		return x.Cra
	}
	return nil
}

type Distortion_Polynomial struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DistortionCenter *Point2F    `protobuf:"bytes,1,req,name=distortion_center,json=distortionCenter" json:"distortion_center,omitempty"`
	Normalization    *Point2F    `protobuf:"bytes,2,req,name=normalization" json:"normalization,omitempty"`
	Coeffs           []float32   `protobuf:"fixed32,3,rep,packed,name=coeffs" json:"coeffs,omitempty"`
	FitCost          *float32    `protobuf:"fixed32,4,opt,name=fit_cost,json=fitCost" json:"fit_cost,omitempty"`
	ValidRoi         *RectangleI `protobuf:"bytes,5,opt,name=valid_roi,json=validRoi" json:"valid_roi,omitempty"`
}

func (x *Distortion_Polynomial) Reset() {
	*x = Distortion_Polynomial{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distortion_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Distortion_Polynomial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Distortion_Polynomial) ProtoMessage() {}

func (x *Distortion_Polynomial) ProtoReflect() protoreflect.Message {
	mi := &file_distortion_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Distortion_Polynomial.ProtoReflect.Descriptor instead.
func (*Distortion_Polynomial) Descriptor() ([]byte, []int) {
	return file_distortion_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Distortion_Polynomial) GetDistortionCenter() *Point2F {
	if x != nil {
		return x.DistortionCenter
	}
	return nil
}

func (x *Distortion_Polynomial) GetNormalization() *Point2F {
	if x != nil {
		return x.Normalization
	}
	return nil
}

func (x *Distortion_Polynomial) GetCoeffs() []float32 {
	if x != nil {
		return x.Coeffs
	}
	return nil
}

func (x *Distortion_Polynomial) GetFitCost() float32 {
	if x != nil && x.FitCost != nil {
		return *x.FitCost
	}
	return 0
}

func (x *Distortion_Polynomial) GetValidRoi() *RectangleI {
	if x != nil {
		return x.ValidRoi
	}
	return nil
}

type Distortion_CRA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DistortionCenter  *Point2F    `protobuf:"bytes,1,req,name=distortion_center,json=distortionCenter" json:"distortion_center,omitempty"`
	SensorDistance    *float32    `protobuf:"fixed32,2,req,name=sensor_distance,json=sensorDistance" json:"sensor_distance,omitempty"`
	ExitPupilDistance *float32    `protobuf:"fixed32,3,req,name=exit_pupil_distance,json=exitPupilDistance" json:"exit_pupil_distance,omitempty"`
	PixelSize         *float32    `protobuf:"fixed32,4,req,name=pixel_size,json=pixelSize" json:"pixel_size,omitempty"`
	Cra               []*Point2F  `protobuf:"bytes,5,rep,name=cra" json:"cra,omitempty"`
	Coeffs            []*Point2F  `protobuf:"bytes,6,rep,name=coeffs" json:"coeffs,omitempty"`
	FitCost           *float32    `protobuf:"fixed32,7,opt,name=fit_cost,json=fitCost" json:"fit_cost,omitempty"`
	ValidRoi          *RectangleI `protobuf:"bytes,8,opt,name=valid_roi,json=validRoi" json:"valid_roi,omitempty"`
	LensHallCode      *float32    `protobuf:"fixed32,9,opt,name=lens_hall_code,json=lensHallCode" json:"lens_hall_code,omitempty"`
	DistanceHallRatio *float32    `protobuf:"fixed32,10,opt,name=distance_hall_ratio,json=distanceHallRatio" json:"distance_hall_ratio,omitempty"`
}

func (x *Distortion_CRA) Reset() {
	*x = Distortion_CRA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distortion_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Distortion_CRA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Distortion_CRA) ProtoMessage() {}

func (x *Distortion_CRA) ProtoReflect() protoreflect.Message {
	mi := &file_distortion_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Distortion_CRA.ProtoReflect.Descriptor instead.
func (*Distortion_CRA) Descriptor() ([]byte, []int) {
	return file_distortion_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Distortion_CRA) GetDistortionCenter() *Point2F {
	if x != nil {
		return x.DistortionCenter
	}
	return nil
}

func (x *Distortion_CRA) GetSensorDistance() float32 {
	if x != nil && x.SensorDistance != nil {
		return *x.SensorDistance
	}
	return 0
}

func (x *Distortion_CRA) GetExitPupilDistance() float32 {
	if x != nil && x.ExitPupilDistance != nil {
		return *x.ExitPupilDistance
	}
	return 0
}

func (x *Distortion_CRA) GetPixelSize() float32 {
	if x != nil && x.PixelSize != nil {
		return *x.PixelSize
	}
	return 0
}

func (x *Distortion_CRA) GetCra() []*Point2F {
	if x != nil {
		return x.Cra
	}
	return nil
}

func (x *Distortion_CRA) GetCoeffs() []*Point2F {
	if x != nil {
		return x.Coeffs
	}
	return nil
}

func (x *Distortion_CRA) GetFitCost() float32 {
	if x != nil && x.FitCost != nil {
		return *x.FitCost
	}
	return 0
}

func (x *Distortion_CRA) GetValidRoi() *RectangleI {
	if x != nil {
		return x.ValidRoi
	}
	return nil
}

func (x *Distortion_CRA) GetLensHallCode() float32 {
	if x != nil && x.LensHallCode != nil {
		return *x.LensHallCode
	}
	return 0
}

func (x *Distortion_CRA) GetDistanceHallRatio() float32 {
	if x != nil && x.DistanceHallRatio != nil {
		return *x.DistanceHallRatio
	}
	return 0
}

var File_distortion_proto protoreflect.FileDescriptor

var file_distortion_proto_rawDesc = []byte{
	0x0a, 0x10, 0x64, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x6c, 0x74, 0x70, 0x62, 0x1a, 0x0d, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x32,
	0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67,
	0x6c, 0x65, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfb, 0x05, 0x0a, 0x0a, 0x44, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x79,
	0x6e, 0x6f, 0x6d, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c,
	0x74, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50,
	0x6f, 0x6c, 0x79, 0x6e, 0x6f, 0x6d, 0x69, 0x61, 0x6c, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x79, 0x6e,
	0x6f, 0x6d, 0x69, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x03, 0x63, 0x72, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x52, 0x41, 0x52, 0x03, 0x63, 0x72, 0x61, 0x1a, 0xe3, 0x01,
	0x0a, 0x0a, 0x50, 0x6f, 0x6c, 0x79, 0x6e, 0x6f, 0x6d, 0x69, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x11,
	0x64, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x32, 0x46, 0x52, 0x10, 0x64, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x0d, 0x6e, 0x6f, 0x72, 0x6d,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x46, 0x52, 0x0d,
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x06, 0x63, 0x6f, 0x65, 0x66, 0x66, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x02, 0x42, 0x02, 0x10,
	0x01, 0x52, 0x06, 0x63, 0x6f, 0x65, 0x66, 0x66, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x74,
	0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x66, 0x69, 0x74,
	0x43, 0x6f, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x72, 0x6f,
	0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x49, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x52, 0x6f, 0x69, 0x1a, 0xa1, 0x03, 0x0a, 0x03, 0x43, 0x52, 0x41, 0x12, 0x3a, 0x0a, 0x11, 0x64,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x32, 0x46, 0x52, 0x10, 0x64, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x02,
	0x52, 0x0e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x5f, 0x64,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x02, 0x52, 0x11, 0x65,
	0x78, 0x69, 0x74, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x02, 0x52, 0x09, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1f, 0x0a, 0x03, 0x63, 0x72, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c,
	0x74, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x46, 0x52, 0x03, 0x63, 0x72, 0x61,
	0x12, 0x25, 0x0a, 0x06, 0x63, 0x6f, 0x65, 0x66, 0x66, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x46, 0x52,
	0x06, 0x63, 0x6f, 0x65, 0x66, 0x66, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x74, 0x5f, 0x63,
	0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x66, 0x69, 0x74, 0x43, 0x6f,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x72, 0x6f, 0x69, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x63,
	0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x49, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x6f,
	0x69, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x65, 0x6e, 0x73, 0x5f, 0x68, 0x61, 0x6c, 0x6c, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x6c, 0x65, 0x6e, 0x73, 0x48,
	0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x68, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x61,
	0x6c, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x6c, 0x74, 0x70,
	0x62, 0x3b, 0x6c, 0x74, 0x70, 0x62,
}

var (
	file_distortion_proto_rawDescOnce sync.Once
	file_distortion_proto_rawDescData = file_distortion_proto_rawDesc
)

func file_distortion_proto_rawDescGZIP() []byte {
	file_distortion_proto_rawDescOnce.Do(func() {
		file_distortion_proto_rawDescData = protoimpl.X.CompressGZIP(file_distortion_proto_rawDescData)
	})
	return file_distortion_proto_rawDescData
}

var file_distortion_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_distortion_proto_goTypes = []any{
	(*Distortion)(nil),            // 0: ltpb.Distortion
	(*Distortion_Polynomial)(nil), // 1: ltpb.Distortion.Polynomial
	(*Distortion_CRA)(nil),        // 2: ltpb.Distortion.CRA
	(*Point2F)(nil),               // 3: ltpb.Point2F
	(*RectangleI)(nil),            // 4: ltpb.RectangleI
}
var file_distortion_proto_depIdxs = []int32{
	1, // 0: ltpb.Distortion.polynomial:type_name -> ltpb.Distortion.Polynomial
	2, // 1: ltpb.Distortion.cra:type_name -> ltpb.Distortion.CRA
	3, // 2: ltpb.Distortion.Polynomial.distortion_center:type_name -> ltpb.Point2F
	3, // 3: ltpb.Distortion.Polynomial.normalization:type_name -> ltpb.Point2F
	4, // 4: ltpb.Distortion.Polynomial.valid_roi:type_name -> ltpb.RectangleI
	3, // 5: ltpb.Distortion.CRA.distortion_center:type_name -> ltpb.Point2F
	3, // 6: ltpb.Distortion.CRA.cra:type_name -> ltpb.Point2F
	3, // 7: ltpb.Distortion.CRA.coeffs:type_name -> ltpb.Point2F
	4, // 8: ltpb.Distortion.CRA.valid_roi:type_name -> ltpb.RectangleI
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_distortion_proto_init() }
func file_distortion_proto_init() {
	if File_distortion_proto != nil {
		return
	}
	file_point2f_proto_init()
	file_rectanglei_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_distortion_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Distortion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distortion_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Distortion_Polynomial); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distortion_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Distortion_CRA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_distortion_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_distortion_proto_goTypes,
		DependencyIndexes: file_distortion_proto_depIdxs,
		MessageInfos:      file_distortion_proto_msgTypes,
	}.Build()
	File_distortion_proto = out.File
	file_distortion_proto_rawDesc = nil
	file_distortion_proto_goTypes = nil
	file_distortion_proto_depIdxs = nil
}
