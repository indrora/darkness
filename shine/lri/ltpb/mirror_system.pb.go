// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0--rc1
// source: mirror_system.proto

package ltpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MirrorActuatorMapping_TransformationType int32

const (
	MirrorActuatorMapping_MEAN_STD_NORMALIZE MirrorActuatorMapping_TransformationType = 0
	MirrorActuatorMapping_TAN_HALF_THETA     MirrorActuatorMapping_TransformationType = 1
)

// Enum value maps for MirrorActuatorMapping_TransformationType.
var (
	MirrorActuatorMapping_TransformationType_name = map[int32]string{
		0: "MEAN_STD_NORMALIZE",
		1: "TAN_HALF_THETA",
	}
	MirrorActuatorMapping_TransformationType_value = map[string]int32{
		"MEAN_STD_NORMALIZE": 0,
		"TAN_HALF_THETA":     1,
	}
)

func (x MirrorActuatorMapping_TransformationType) Enum() *MirrorActuatorMapping_TransformationType {
	p := new(MirrorActuatorMapping_TransformationType)
	*p = x
	return p
}

func (x MirrorActuatorMapping_TransformationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MirrorActuatorMapping_TransformationType) Descriptor() protoreflect.EnumDescriptor {
	return file_mirror_system_proto_enumTypes[0].Descriptor()
}

func (MirrorActuatorMapping_TransformationType) Type() protoreflect.EnumType {
	return &file_mirror_system_proto_enumTypes[0]
}

func (x MirrorActuatorMapping_TransformationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MirrorActuatorMapping_TransformationType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MirrorActuatorMapping_TransformationType(num)
	return nil
}

// Deprecated: Use MirrorActuatorMapping_TransformationType.Descriptor instead.
func (MirrorActuatorMapping_TransformationType) EnumDescriptor() ([]byte, []int) {
	return file_mirror_system_proto_rawDescGZIP(), []int{1, 0}
}

type MirrorSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RealCameraLocation                       *Point3F    `protobuf:"bytes,1,req,name=real_camera_location,json=realCameraLocation" json:"real_camera_location,omitempty"`
	RealCameraOrientation                    *Matrix3X3F `protobuf:"bytes,2,req,name=real_camera_orientation,json=realCameraOrientation" json:"real_camera_orientation,omitempty"`
	RotationAxis                             *Point3F    `protobuf:"bytes,3,req,name=rotation_axis,json=rotationAxis" json:"rotation_axis,omitempty"`
	PointOnRotationAxis                      *Point3F    `protobuf:"bytes,4,req,name=point_on_rotation_axis,json=pointOnRotationAxis" json:"point_on_rotation_axis,omitempty"`
	DistanceMirrorPlaneToPointOnRotationAxis *float32    `protobuf:"fixed32,5,req,name=distance_mirror_plane_to_point_on_rotation_axis,json=distanceMirrorPlaneToPointOnRotationAxis" json:"distance_mirror_plane_to_point_on_rotation_axis,omitempty"`
	MirrorNormalAtZeroDegrees                *Point3F    `protobuf:"bytes,6,req,name=mirror_normal_at_zero_degrees,json=mirrorNormalAtZeroDegrees" json:"mirror_normal_at_zero_degrees,omitempty"`
	FlipImgAroundX                           *bool       `protobuf:"varint,7,req,name=flip_img_around_x,json=flipImgAroundX" json:"flip_img_around_x,omitempty"`
	MirrorAngleRange                         *Range2F    `protobuf:"bytes,8,req,name=mirror_angle_range,json=mirrorAngleRange" json:"mirror_angle_range,omitempty"`
	ReprojectionError                        *float32    `protobuf:"fixed32,9,opt,name=reprojection_error,json=reprojectionError" json:"reprojection_error,omitempty"`
}

func (x *MirrorSystem) Reset() {
	*x = MirrorSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirror_system_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MirrorSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MirrorSystem) ProtoMessage() {}

func (x *MirrorSystem) ProtoReflect() protoreflect.Message {
	mi := &file_mirror_system_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MirrorSystem.ProtoReflect.Descriptor instead.
func (*MirrorSystem) Descriptor() ([]byte, []int) {
	return file_mirror_system_proto_rawDescGZIP(), []int{0}
}

func (x *MirrorSystem) GetRealCameraLocation() *Point3F {
	if x != nil {
		return x.RealCameraLocation
	}
	return nil
}

func (x *MirrorSystem) GetRealCameraOrientation() *Matrix3X3F {
	if x != nil {
		return x.RealCameraOrientation
	}
	return nil
}

func (x *MirrorSystem) GetRotationAxis() *Point3F {
	if x != nil {
		return x.RotationAxis
	}
	return nil
}

func (x *MirrorSystem) GetPointOnRotationAxis() *Point3F {
	if x != nil {
		return x.PointOnRotationAxis
	}
	return nil
}

func (x *MirrorSystem) GetDistanceMirrorPlaneToPointOnRotationAxis() float32 {
	if x != nil && x.DistanceMirrorPlaneToPointOnRotationAxis != nil {
		return *x.DistanceMirrorPlaneToPointOnRotationAxis
	}
	return 0
}

func (x *MirrorSystem) GetMirrorNormalAtZeroDegrees() *Point3F {
	if x != nil {
		return x.MirrorNormalAtZeroDegrees
	}
	return nil
}

func (x *MirrorSystem) GetFlipImgAroundX() bool {
	if x != nil && x.FlipImgAroundX != nil {
		return *x.FlipImgAroundX
	}
	return false
}

func (x *MirrorSystem) GetMirrorAngleRange() *Range2F {
	if x != nil {
		return x.MirrorAngleRange
	}
	return nil
}

func (x *MirrorSystem) GetReprojectionError() float32 {
	if x != nil && x.ReprojectionError != nil {
		return *x.ReprojectionError
	}
	return 0
}

type MirrorActuatorMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransformationType   *MirrorActuatorMapping_TransformationType  `protobuf:"varint,1,req,name=transformation_type,json=transformationType,enum=ltpb.MirrorActuatorMapping_TransformationType" json:"transformation_type,omitempty"`
	ActuatorLengthOffset *float32                                   `protobuf:"fixed32,2,req,name=actuator_length_offset,json=actuatorLengthOffset" json:"actuator_length_offset,omitempty"`
	ActuatorLengthScale  *float32                                   `protobuf:"fixed32,3,req,name=actuator_length_scale,json=actuatorLengthScale" json:"actuator_length_scale,omitempty"`
	MirrorAngleOffset    *float32                                   `protobuf:"fixed32,4,req,name=mirror_angle_offset,json=mirrorAngleOffset" json:"mirror_angle_offset,omitempty"`
	MirrorAngleScale     *float32                                   `protobuf:"fixed32,5,req,name=mirror_angle_scale,json=mirrorAngleScale" json:"mirror_angle_scale,omitempty"`
	ActuatorAnglePairVec []*MirrorActuatorMapping_ActuatorAnglePair `protobuf:"bytes,6,rep,name=actuator_angle_pair_vec,json=actuatorAnglePairVec" json:"actuator_angle_pair_vec,omitempty"`
	QuadraticModel       *MirrorActuatorMapping_QuadraticModel      `protobuf:"bytes,7,req,name=quadratic_model,json=quadraticModel" json:"quadratic_model,omitempty"`
	AngleToHallCodeError *float32                                   `protobuf:"fixed32,8,opt,name=angle_to_hall_code_error,json=angleToHallCodeError" json:"angle_to_hall_code_error,omitempty"`
	HallCodeToAngleError *float32                                   `protobuf:"fixed32,9,opt,name=hall_code_to_angle_error,json=hallCodeToAngleError" json:"hall_code_to_angle_error,omitempty"`
	HallCodeRange        *Range2F                                   `protobuf:"bytes,10,opt,name=hall_code_range,json=hallCodeRange" json:"hall_code_range,omitempty"`
}

func (x *MirrorActuatorMapping) Reset() {
	*x = MirrorActuatorMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirror_system_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MirrorActuatorMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MirrorActuatorMapping) ProtoMessage() {}

func (x *MirrorActuatorMapping) ProtoReflect() protoreflect.Message {
	mi := &file_mirror_system_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MirrorActuatorMapping.ProtoReflect.Descriptor instead.
func (*MirrorActuatorMapping) Descriptor() ([]byte, []int) {
	return file_mirror_system_proto_rawDescGZIP(), []int{1}
}

func (x *MirrorActuatorMapping) GetTransformationType() MirrorActuatorMapping_TransformationType {
	if x != nil && x.TransformationType != nil {
		return *x.TransformationType
	}
	return MirrorActuatorMapping_MEAN_STD_NORMALIZE
}

func (x *MirrorActuatorMapping) GetActuatorLengthOffset() float32 {
	if x != nil && x.ActuatorLengthOffset != nil {
		return *x.ActuatorLengthOffset
	}
	return 0
}

func (x *MirrorActuatorMapping) GetActuatorLengthScale() float32 {
	if x != nil && x.ActuatorLengthScale != nil {
		return *x.ActuatorLengthScale
	}
	return 0
}

func (x *MirrorActuatorMapping) GetMirrorAngleOffset() float32 {
	if x != nil && x.MirrorAngleOffset != nil {
		return *x.MirrorAngleOffset
	}
	return 0
}

func (x *MirrorActuatorMapping) GetMirrorAngleScale() float32 {
	if x != nil && x.MirrorAngleScale != nil {
		return *x.MirrorAngleScale
	}
	return 0
}

func (x *MirrorActuatorMapping) GetActuatorAnglePairVec() []*MirrorActuatorMapping_ActuatorAnglePair {
	if x != nil {
		return x.ActuatorAnglePairVec
	}
	return nil
}

func (x *MirrorActuatorMapping) GetQuadraticModel() *MirrorActuatorMapping_QuadraticModel {
	if x != nil {
		return x.QuadraticModel
	}
	return nil
}

func (x *MirrorActuatorMapping) GetAngleToHallCodeError() float32 {
	if x != nil && x.AngleToHallCodeError != nil {
		return *x.AngleToHallCodeError
	}
	return 0
}

func (x *MirrorActuatorMapping) GetHallCodeToAngleError() float32 {
	if x != nil && x.HallCodeToAngleError != nil {
		return *x.HallCodeToAngleError
	}
	return 0
}

func (x *MirrorActuatorMapping) GetHallCodeRange() *Range2F {
	if x != nil {
		return x.HallCodeRange
	}
	return nil
}

type MirrorActuatorMapping_ActuatorAnglePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HallCode *int32   `protobuf:"varint,1,req,name=hall_code,json=hallCode" json:"hall_code,omitempty"`
	Angle    *float32 `protobuf:"fixed32,2,req,name=angle" json:"angle,omitempty"`
}

func (x *MirrorActuatorMapping_ActuatorAnglePair) Reset() {
	*x = MirrorActuatorMapping_ActuatorAnglePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirror_system_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MirrorActuatorMapping_ActuatorAnglePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MirrorActuatorMapping_ActuatorAnglePair) ProtoMessage() {}

func (x *MirrorActuatorMapping_ActuatorAnglePair) ProtoReflect() protoreflect.Message {
	mi := &file_mirror_system_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MirrorActuatorMapping_ActuatorAnglePair.ProtoReflect.Descriptor instead.
func (*MirrorActuatorMapping_ActuatorAnglePair) Descriptor() ([]byte, []int) {
	return file_mirror_system_proto_rawDescGZIP(), []int{1, 0}
}

func (x *MirrorActuatorMapping_ActuatorAnglePair) GetHallCode() int32 {
	if x != nil && x.HallCode != nil {
		return *x.HallCode
	}
	return 0
}

func (x *MirrorActuatorMapping_ActuatorAnglePair) GetAngle() float32 {
	if x != nil && x.Angle != nil {
		return *x.Angle
	}
	return 0
}

type MirrorActuatorMapping_QuadraticModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UseRplusForLeftSegment  *bool     `protobuf:"varint,1,req,name=use_rplus_for_left_segment,json=useRplusForLeftSegment" json:"use_rplus_for_left_segment,omitempty"`
	UseRplusForRightSegment *bool     `protobuf:"varint,2,req,name=use_rplus_for_right_segment,json=useRplusForRightSegment" json:"use_rplus_for_right_segment,omitempty"`
	InflectionValue         *float32  `protobuf:"fixed32,3,req,name=inflection_value,json=inflectionValue" json:"inflection_value,omitempty"`
	ModelCoeffs             []float32 `protobuf:"fixed32,4,rep,packed,name=model_coeffs,json=modelCoeffs" json:"model_coeffs,omitempty"`
}

func (x *MirrorActuatorMapping_QuadraticModel) Reset() {
	*x = MirrorActuatorMapping_QuadraticModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirror_system_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MirrorActuatorMapping_QuadraticModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MirrorActuatorMapping_QuadraticModel) ProtoMessage() {}

func (x *MirrorActuatorMapping_QuadraticModel) ProtoReflect() protoreflect.Message {
	mi := &file_mirror_system_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MirrorActuatorMapping_QuadraticModel.ProtoReflect.Descriptor instead.
func (*MirrorActuatorMapping_QuadraticModel) Descriptor() ([]byte, []int) {
	return file_mirror_system_proto_rawDescGZIP(), []int{1, 1}
}

func (x *MirrorActuatorMapping_QuadraticModel) GetUseRplusForLeftSegment() bool {
	if x != nil && x.UseRplusForLeftSegment != nil {
		return *x.UseRplusForLeftSegment
	}
	return false
}

func (x *MirrorActuatorMapping_QuadraticModel) GetUseRplusForRightSegment() bool {
	if x != nil && x.UseRplusForRightSegment != nil {
		return *x.UseRplusForRightSegment
	}
	return false
}

func (x *MirrorActuatorMapping_QuadraticModel) GetInflectionValue() float32 {
	if x != nil && x.InflectionValue != nil {
		return *x.InflectionValue
	}
	return 0
}

func (x *MirrorActuatorMapping_QuadraticModel) GetModelCoeffs() []float32 {
	if x != nil {
		return x.ModelCoeffs
	}
	return nil
}

var File_mirror_system_proto protoreflect.FileDescriptor

var file_mirror_system_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6c, 0x74, 0x70, 0x62, 0x1a, 0x10, 0x6d, 0x61, 0x74,
	0x72, 0x69, 0x78, 0x33, 0x78, 0x33, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x33, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x32, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x04, 0x0a, 0x0c,
	0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x3f, 0x0a, 0x14,
	0x72, 0x65, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x74, 0x70,
	0x62, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x33, 0x46, 0x52, 0x12, 0x72, 0x65, 0x61, 0x6c, 0x43,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a,
	0x17, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x6f, 0x72, 0x69,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x33, 0x78, 0x33, 0x46,
	0x52, 0x15, 0x72, 0x65, 0x61, 0x6c, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x4f, 0x72, 0x69, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x0d, 0x72, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x33, 0x46, 0x52, 0x0c, 0x72,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x78, 0x69, 0x73, 0x12, 0x42, 0x0a, 0x16, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x61, 0x78, 0x69, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x74,
	0x70, 0x62, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x33, 0x46, 0x52, 0x13, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x4f, 0x6e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x78, 0x69, 0x73, 0x12,
	0x61, 0x0a, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x69, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x78,
	0x69, 0x73, 0x18, 0x05, 0x20, 0x02, 0x28, 0x02, 0x52, 0x28, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x54, 0x6f, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x6e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x78,
	0x69, 0x73, 0x12, 0x4f, 0x0a, 0x1d, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x5f, 0x61, 0x74, 0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x64, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x73, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x74, 0x70, 0x62,
	0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x33, 0x46, 0x52, 0x19, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72,
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x41, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x44, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x11, 0x66, 0x6c, 0x69, 0x70, 0x5f, 0x69, 0x6d, 0x67, 0x5f,
	0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x78, 0x18, 0x07, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0e,
	0x66, 0x6c, 0x69, 0x70, 0x49, 0x6d, 0x67, 0x41, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x58, 0x12, 0x3b,
	0x0a, 0x12, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x08, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x74, 0x70,
	0x62, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x32, 0x46, 0x52, 0x10, 0x6d, 0x69, 0x72, 0x72, 0x6f,
	0x72, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x72,
	0x65, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x8b, 0x08, 0x0a, 0x15, 0x4d,
	0x69, 0x72, 0x72, 0x6f, 0x72, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x12, 0x5f, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0e, 0x32, 0x2e, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x41,
	0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x02, 0x52, 0x14, 0x61, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x02, 0x52, 0x13, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x74, 0x6f, 0x72, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x02, 0x52, 0x11, 0x6d, 0x69,
	0x72, 0x72, 0x6f, 0x72, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x02, 0x52, 0x10, 0x6d, 0x69, 0x72,
	0x72, 0x6f, 0x72, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x64, 0x0a,
	0x17, 0x61, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f,
	0x70, 0x61, 0x69, 0x72, 0x5f, 0x76, 0x65, 0x63, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x41, 0x63, 0x74, 0x75,
	0x61, 0x74, 0x6f, 0x72, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x75,
	0x61, 0x74, 0x6f, 0x72, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x14, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x69, 0x72,
	0x56, 0x65, 0x63, 0x12, 0x53, 0x0a, 0x0f, 0x71, 0x75, 0x61, 0x64, 0x72, 0x61, 0x74, 0x69, 0x63,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c,
	0x74, 0x70, 0x62, 0x2e, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74,
	0x6f, 0x72, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61,
	0x74, 0x69, 0x63, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0e, 0x71, 0x75, 0x61, 0x64, 0x72, 0x61,
	0x74, 0x69, 0x63, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x36, 0x0a, 0x18, 0x61, 0x6e, 0x67, 0x6c,
	0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x68, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x61, 0x6e, 0x67, 0x6c,
	0x65, 0x54, 0x6f, 0x48, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x36, 0x0a, 0x18, 0x68, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x6f,
	0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x14, 0x68, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x41, 0x6e,
	0x67, 0x6c, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x0f, 0x68, 0x61, 0x6c, 0x6c,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x32, 0x46,
	0x52, 0x0d, 0x68, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x1a,
	0x46, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x6e, 0x67, 0x6c, 0x65,
	0x50, 0x61, 0x69, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x68, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x02,
	0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x1a, 0xdc, 0x01, 0x0a, 0x0e, 0x51, 0x75, 0x61, 0x64,
	0x72, 0x61, 0x74, 0x69, 0x63, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x3a, 0x0a, 0x1a, 0x75, 0x73,
	0x65, 0x5f, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74,
	0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x16,
	0x75, 0x73, 0x65, 0x52, 0x70, 0x6c, 0x75, 0x73, 0x46, 0x6f, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x1b, 0x75, 0x73, 0x65, 0x5f, 0x72, 0x70,
	0x6c, 0x75, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x52, 0x17, 0x75, 0x73, 0x65,
	0x52, 0x70, 0x6c, 0x75, 0x73, 0x46, 0x6f, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x02, 0x52, 0x0f,
	0x69, 0x6e, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x25, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x65, 0x66, 0x66, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x02, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x43, 0x6f, 0x65, 0x66, 0x66, 0x73, 0x22, 0x40, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12,
	0x4d, 0x45, 0x41, 0x4e, 0x5f, 0x53, 0x54, 0x44, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x49,
	0x5a, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x41, 0x4e, 0x5f, 0x48, 0x41, 0x4c, 0x46,
	0x5f, 0x54, 0x48, 0x45, 0x54, 0x41, 0x10, 0x01, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x6c, 0x74,
	0x70, 0x62, 0x3b, 0x6c, 0x74, 0x70, 0x62,
}

var (
	file_mirror_system_proto_rawDescOnce sync.Once
	file_mirror_system_proto_rawDescData = file_mirror_system_proto_rawDesc
)

func file_mirror_system_proto_rawDescGZIP() []byte {
	file_mirror_system_proto_rawDescOnce.Do(func() {
		file_mirror_system_proto_rawDescData = protoimpl.X.CompressGZIP(file_mirror_system_proto_rawDescData)
	})
	return file_mirror_system_proto_rawDescData
}

var file_mirror_system_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mirror_system_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_mirror_system_proto_goTypes = []any{
	(MirrorActuatorMapping_TransformationType)(0),   // 0: ltpb.MirrorActuatorMapping.TransformationType
	(*MirrorSystem)(nil),                            // 1: ltpb.MirrorSystem
	(*MirrorActuatorMapping)(nil),                   // 2: ltpb.MirrorActuatorMapping
	(*MirrorActuatorMapping_ActuatorAnglePair)(nil), // 3: ltpb.MirrorActuatorMapping.ActuatorAnglePair
	(*MirrorActuatorMapping_QuadraticModel)(nil),    // 4: ltpb.MirrorActuatorMapping.QuadraticModel
	(*Point3F)(nil),                                 // 5: ltpb.Point3F
	(*Matrix3X3F)(nil),                              // 6: ltpb.Matrix3x3F
	(*Range2F)(nil),                                 // 7: ltpb.Range2F
}
var file_mirror_system_proto_depIdxs = []int32{
	5,  // 0: ltpb.MirrorSystem.real_camera_location:type_name -> ltpb.Point3F
	6,  // 1: ltpb.MirrorSystem.real_camera_orientation:type_name -> ltpb.Matrix3x3F
	5,  // 2: ltpb.MirrorSystem.rotation_axis:type_name -> ltpb.Point3F
	5,  // 3: ltpb.MirrorSystem.point_on_rotation_axis:type_name -> ltpb.Point3F
	5,  // 4: ltpb.MirrorSystem.mirror_normal_at_zero_degrees:type_name -> ltpb.Point3F
	7,  // 5: ltpb.MirrorSystem.mirror_angle_range:type_name -> ltpb.Range2F
	0,  // 6: ltpb.MirrorActuatorMapping.transformation_type:type_name -> ltpb.MirrorActuatorMapping.TransformationType
	3,  // 7: ltpb.MirrorActuatorMapping.actuator_angle_pair_vec:type_name -> ltpb.MirrorActuatorMapping.ActuatorAnglePair
	4,  // 8: ltpb.MirrorActuatorMapping.quadratic_model:type_name -> ltpb.MirrorActuatorMapping.QuadraticModel
	7,  // 9: ltpb.MirrorActuatorMapping.hall_code_range:type_name -> ltpb.Range2F
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_mirror_system_proto_init() }
func file_mirror_system_proto_init() {
	if File_mirror_system_proto != nil {
		return
	}
	file_matrix3x3f_proto_init()
	file_point3f_proto_init()
	file_range2f_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mirror_system_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MirrorSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirror_system_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*MirrorActuatorMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirror_system_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MirrorActuatorMapping_ActuatorAnglePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirror_system_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*MirrorActuatorMapping_QuadraticModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mirror_system_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mirror_system_proto_goTypes,
		DependencyIndexes: file_mirror_system_proto_depIdxs,
		EnumInfos:         file_mirror_system_proto_enumTypes,
		MessageInfos:      file_mirror_system_proto_msgTypes,
	}.Build()
	File_mirror_system_proto = out.File
	file_mirror_system_proto_rawDesc = nil
	file_mirror_system_proto_goTypes = nil
	file_mirror_system_proto_depIdxs = nil
}
