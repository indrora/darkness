// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0--rc1
// source: geometric_calibration.proto

package ltpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GeometricCalibration_MirrorType int32

const (
	GeometricCalibration_NONE    GeometricCalibration_MirrorType = 0
	GeometricCalibration_GLUED   GeometricCalibration_MirrorType = 1
	GeometricCalibration_MOVABLE GeometricCalibration_MirrorType = 2
)

// Enum value maps for GeometricCalibration_MirrorType.
var (
	GeometricCalibration_MirrorType_name = map[int32]string{
		0: "NONE",
		1: "GLUED",
		2: "MOVABLE",
	}
	GeometricCalibration_MirrorType_value = map[string]int32{
		"NONE":    0,
		"GLUED":   1,
		"MOVABLE": 2,
	}
)

func (x GeometricCalibration_MirrorType) Enum() *GeometricCalibration_MirrorType {
	p := new(GeometricCalibration_MirrorType)
	*p = x
	return p
}

func (x GeometricCalibration_MirrorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GeometricCalibration_MirrorType) Descriptor() protoreflect.EnumDescriptor {
	return file_geometric_calibration_proto_enumTypes[0].Descriptor()
}

func (GeometricCalibration_MirrorType) Type() protoreflect.EnumType {
	return &file_geometric_calibration_proto_enumTypes[0]
}

func (x GeometricCalibration_MirrorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GeometricCalibration_MirrorType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GeometricCalibration_MirrorType(num)
	return nil
}

// Deprecated: Use GeometricCalibration_MirrorType.Descriptor instead.
func (GeometricCalibration_MirrorType) EnumDescriptor() ([]byte, []int) {
	return file_geometric_calibration_proto_rawDescGZIP(), []int{0, 0}
}

type GeometricCalibration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MirrorType                *GeometricCalibration_MirrorType                `protobuf:"varint,1,opt,name=mirror_type,json=mirrorType,enum=ltpb.GeometricCalibration_MirrorType" json:"mirror_type,omitempty"`
	PerFocusCalibration       []*GeometricCalibration_CalibrationFocusBundle  `protobuf:"bytes,2,rep,name=per_focus_calibration,json=perFocusCalibration" json:"per_focus_calibration,omitempty"`
	Distortion                *Distortion                                     `protobuf:"bytes,3,opt,name=distortion" json:"distortion,omitempty"`
	LensHallCodeRange         *Range2F                                        `protobuf:"bytes,4,opt,name=lens_hall_code_range,json=lensHallCodeRange" json:"lens_hall_code_range,omitempty"`
	FocusDistanceRange        *Range2F                                        `protobuf:"bytes,5,opt,name=focus_distance_range,json=focusDistanceRange" json:"focus_distance_range,omitempty"`
	AngleOpticalCenterMapping *GeometricCalibration_AngleOpticalCenterMapping `protobuf:"bytes,6,opt,name=angle_optical_center_mapping,json=angleOpticalCenterMapping" json:"angle_optical_center_mapping,omitempty"`
}

func (x *GeometricCalibration) Reset() {
	*x = GeometricCalibration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geometric_calibration_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeometricCalibration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeometricCalibration) ProtoMessage() {}

func (x *GeometricCalibration) ProtoReflect() protoreflect.Message {
	mi := &file_geometric_calibration_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeometricCalibration.ProtoReflect.Descriptor instead.
func (*GeometricCalibration) Descriptor() ([]byte, []int) {
	return file_geometric_calibration_proto_rawDescGZIP(), []int{0}
}

func (x *GeometricCalibration) GetMirrorType() GeometricCalibration_MirrorType {
	if x != nil && x.MirrorType != nil {
		return *x.MirrorType
	}
	return GeometricCalibration_NONE
}

func (x *GeometricCalibration) GetPerFocusCalibration() []*GeometricCalibration_CalibrationFocusBundle {
	if x != nil {
		return x.PerFocusCalibration
	}
	return nil
}

func (x *GeometricCalibration) GetDistortion() *Distortion {
	if x != nil {
		return x.Distortion
	}
	return nil
}

func (x *GeometricCalibration) GetLensHallCodeRange() *Range2F {
	if x != nil {
		return x.LensHallCodeRange
	}
	return nil
}

func (x *GeometricCalibration) GetFocusDistanceRange() *Range2F {
	if x != nil {
		return x.FocusDistanceRange
	}
	return nil
}

func (x *GeometricCalibration) GetAngleOpticalCenterMapping() *GeometricCalibration_AngleOpticalCenterMapping {
	if x != nil {
		return x.AngleOpticalCenterMapping
	}
	return nil
}

type GeometricCalibration_CalibrationFocusBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FocusDistance *float32                         `protobuf:"fixed32,1,req,name=focus_distance,json=focusDistance" json:"focus_distance,omitempty"`
	Intrinsics    *GeometricCalibration_Intrinsics `protobuf:"bytes,2,opt,name=intrinsics" json:"intrinsics,omitempty"`
	Extrinsics    *GeometricCalibration_Extrinsics `protobuf:"bytes,3,opt,name=extrinsics" json:"extrinsics,omitempty"`
	SensorTemp    *int32                           `protobuf:"zigzag32,4,opt,name=sensor_temp,json=sensorTemp" json:"sensor_temp,omitempty"`
	DeviceTemp    *DeviceTemp                      `protobuf:"bytes,5,opt,name=device_temp,json=deviceTemp" json:"device_temp,omitempty"`
	FocusHallCode *float32                         `protobuf:"fixed32,6,opt,name=focus_hall_code,json=focusHallCode" json:"focus_hall_code,omitempty"`
}

func (x *GeometricCalibration_CalibrationFocusBundle) Reset() {
	*x = GeometricCalibration_CalibrationFocusBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geometric_calibration_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeometricCalibration_CalibrationFocusBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeometricCalibration_CalibrationFocusBundle) ProtoMessage() {}

func (x *GeometricCalibration_CalibrationFocusBundle) ProtoReflect() protoreflect.Message {
	mi := &file_geometric_calibration_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeometricCalibration_CalibrationFocusBundle.ProtoReflect.Descriptor instead.
func (*GeometricCalibration_CalibrationFocusBundle) Descriptor() ([]byte, []int) {
	return file_geometric_calibration_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GeometricCalibration_CalibrationFocusBundle) GetFocusDistance() float32 {
	if x != nil && x.FocusDistance != nil {
		return *x.FocusDistance
	}
	return 0
}

func (x *GeometricCalibration_CalibrationFocusBundle) GetIntrinsics() *GeometricCalibration_Intrinsics {
	if x != nil {
		return x.Intrinsics
	}
	return nil
}

func (x *GeometricCalibration_CalibrationFocusBundle) GetExtrinsics() *GeometricCalibration_Extrinsics {
	if x != nil {
		return x.Extrinsics
	}
	return nil
}

func (x *GeometricCalibration_CalibrationFocusBundle) GetSensorTemp() int32 {
	if x != nil && x.SensorTemp != nil {
		return *x.SensorTemp
	}
	return 0
}

func (x *GeometricCalibration_CalibrationFocusBundle) GetDeviceTemp() *DeviceTemp {
	if x != nil {
		return x.DeviceTemp
	}
	return nil
}

func (x *GeometricCalibration_CalibrationFocusBundle) GetFocusHallCode() float32 {
	if x != nil && x.FocusHallCode != nil {
		return *x.FocusHallCode
	}
	return 0
}

type GeometricCalibration_AngleOpticalCenterMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CenterStart *Point2F `protobuf:"bytes,1,req,name=center_start,json=centerStart" json:"center_start,omitempty"`
	CenterEnd   *Point2F `protobuf:"bytes,2,req,name=center_end,json=centerEnd" json:"center_end,omitempty"`
	AngleOffset *float32 `protobuf:"fixed32,3,req,name=angle_offset,json=angleOffset" json:"angle_offset,omitempty"`
	TScale      *float32 `protobuf:"fixed32,4,req,name=t_scale,json=tScale" json:"t_scale,omitempty"`
	TOffset     *float32 `protobuf:"fixed32,5,req,name=t_offset,json=tOffset" json:"t_offset,omitempty"`
}

func (x *GeometricCalibration_AngleOpticalCenterMapping) Reset() {
	*x = GeometricCalibration_AngleOpticalCenterMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geometric_calibration_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeometricCalibration_AngleOpticalCenterMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeometricCalibration_AngleOpticalCenterMapping) ProtoMessage() {}

func (x *GeometricCalibration_AngleOpticalCenterMapping) ProtoReflect() protoreflect.Message {
	mi := &file_geometric_calibration_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeometricCalibration_AngleOpticalCenterMapping.ProtoReflect.Descriptor instead.
func (*GeometricCalibration_AngleOpticalCenterMapping) Descriptor() ([]byte, []int) {
	return file_geometric_calibration_proto_rawDescGZIP(), []int{0, 1}
}

func (x *GeometricCalibration_AngleOpticalCenterMapping) GetCenterStart() *Point2F {
	if x != nil {
		return x.CenterStart
	}
	return nil
}

func (x *GeometricCalibration_AngleOpticalCenterMapping) GetCenterEnd() *Point2F {
	if x != nil {
		return x.CenterEnd
	}
	return nil
}

func (x *GeometricCalibration_AngleOpticalCenterMapping) GetAngleOffset() float32 {
	if x != nil && x.AngleOffset != nil {
		return *x.AngleOffset
	}
	return 0
}

func (x *GeometricCalibration_AngleOpticalCenterMapping) GetTScale() float32 {
	if x != nil && x.TScale != nil {
		return *x.TScale
	}
	return 0
}

func (x *GeometricCalibration_AngleOpticalCenterMapping) GetTOffset() float32 {
	if x != nil && x.TOffset != nil {
		return *x.TOffset
	}
	return 0
}

type GeometricCalibration_Intrinsics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KMat     *Matrix3X3F `protobuf:"bytes,1,req,name=k_mat,json=kMat" json:"k_mat,omitempty"`
	RmsError *float32    `protobuf:"fixed32,2,opt,name=rms_error,json=rmsError" json:"rms_error,omitempty"`
}

func (x *GeometricCalibration_Intrinsics) Reset() {
	*x = GeometricCalibration_Intrinsics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geometric_calibration_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeometricCalibration_Intrinsics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeometricCalibration_Intrinsics) ProtoMessage() {}

func (x *GeometricCalibration_Intrinsics) ProtoReflect() protoreflect.Message {
	mi := &file_geometric_calibration_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeometricCalibration_Intrinsics.ProtoReflect.Descriptor instead.
func (*GeometricCalibration_Intrinsics) Descriptor() ([]byte, []int) {
	return file_geometric_calibration_proto_rawDescGZIP(), []int{0, 2}
}

func (x *GeometricCalibration_Intrinsics) GetKMat() *Matrix3X3F {
	if x != nil {
		return x.KMat
	}
	return nil
}

func (x *GeometricCalibration_Intrinsics) GetRmsError() float32 {
	if x != nil && x.RmsError != nil {
		return *x.RmsError
	}
	return 0
}

type GeometricCalibration_Extrinsics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Canonical      *GeometricCalibration_Extrinsics_CanonicalFormat     `protobuf:"bytes,1,opt,name=canonical" json:"canonical,omitempty"`
	MoveableMirror *GeometricCalibration_Extrinsics_MovableMirrorFormat `protobuf:"bytes,2,opt,name=moveable_mirror,json=moveableMirror" json:"moveable_mirror,omitempty"`
}

func (x *GeometricCalibration_Extrinsics) Reset() {
	*x = GeometricCalibration_Extrinsics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geometric_calibration_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeometricCalibration_Extrinsics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeometricCalibration_Extrinsics) ProtoMessage() {}

func (x *GeometricCalibration_Extrinsics) ProtoReflect() protoreflect.Message {
	mi := &file_geometric_calibration_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeometricCalibration_Extrinsics.ProtoReflect.Descriptor instead.
func (*GeometricCalibration_Extrinsics) Descriptor() ([]byte, []int) {
	return file_geometric_calibration_proto_rawDescGZIP(), []int{0, 3}
}

func (x *GeometricCalibration_Extrinsics) GetCanonical() *GeometricCalibration_Extrinsics_CanonicalFormat {
	if x != nil {
		return x.Canonical
	}
	return nil
}

func (x *GeometricCalibration_Extrinsics) GetMoveableMirror() *GeometricCalibration_Extrinsics_MovableMirrorFormat {
	if x != nil {
		return x.MoveableMirror
	}
	return nil
}

type GeometricCalibration_Extrinsics_CanonicalFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rotation          *Matrix3X3F `protobuf:"bytes,1,req,name=rotation" json:"rotation,omitempty"`
	Translation       *Point3F    `protobuf:"bytes,2,req,name=translation" json:"translation,omitempty"`
	StereoError       *float32    `protobuf:"fixed32,3,opt,name=stereo_error,json=stereoError" json:"stereo_error,omitempty"`
	ReprojectionError *float32    `protobuf:"fixed32,4,opt,name=reprojection_error,json=reprojectionError" json:"reprojection_error,omitempty"`
}

func (x *GeometricCalibration_Extrinsics_CanonicalFormat) Reset() {
	*x = GeometricCalibration_Extrinsics_CanonicalFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geometric_calibration_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeometricCalibration_Extrinsics_CanonicalFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeometricCalibration_Extrinsics_CanonicalFormat) ProtoMessage() {}

func (x *GeometricCalibration_Extrinsics_CanonicalFormat) ProtoReflect() protoreflect.Message {
	mi := &file_geometric_calibration_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeometricCalibration_Extrinsics_CanonicalFormat.ProtoReflect.Descriptor instead.
func (*GeometricCalibration_Extrinsics_CanonicalFormat) Descriptor() ([]byte, []int) {
	return file_geometric_calibration_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (x *GeometricCalibration_Extrinsics_CanonicalFormat) GetRotation() *Matrix3X3F {
	if x != nil {
		return x.Rotation
	}
	return nil
}

func (x *GeometricCalibration_Extrinsics_CanonicalFormat) GetTranslation() *Point3F {
	if x != nil {
		return x.Translation
	}
	return nil
}

func (x *GeometricCalibration_Extrinsics_CanonicalFormat) GetStereoError() float32 {
	if x != nil && x.StereoError != nil {
		return *x.StereoError
	}
	return 0
}

func (x *GeometricCalibration_Extrinsics_CanonicalFormat) GetReprojectionError() float32 {
	if x != nil && x.ReprojectionError != nil {
		return *x.ReprojectionError
	}
	return 0
}

type GeometricCalibration_Extrinsics_MovableMirrorFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MirrorSystem          *MirrorSystem          `protobuf:"bytes,1,opt,name=mirror_system,json=mirrorSystem" json:"mirror_system,omitempty"`
	MirrorActuatorMapping *MirrorActuatorMapping `protobuf:"bytes,2,opt,name=mirror_actuator_mapping,json=mirrorActuatorMapping" json:"mirror_actuator_mapping,omitempty"`
}

func (x *GeometricCalibration_Extrinsics_MovableMirrorFormat) Reset() {
	*x = GeometricCalibration_Extrinsics_MovableMirrorFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geometric_calibration_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeometricCalibration_Extrinsics_MovableMirrorFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeometricCalibration_Extrinsics_MovableMirrorFormat) ProtoMessage() {}

func (x *GeometricCalibration_Extrinsics_MovableMirrorFormat) ProtoReflect() protoreflect.Message {
	mi := &file_geometric_calibration_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeometricCalibration_Extrinsics_MovableMirrorFormat.ProtoReflect.Descriptor instead.
func (*GeometricCalibration_Extrinsics_MovableMirrorFormat) Descriptor() ([]byte, []int) {
	return file_geometric_calibration_proto_rawDescGZIP(), []int{0, 3, 1}
}

func (x *GeometricCalibration_Extrinsics_MovableMirrorFormat) GetMirrorSystem() *MirrorSystem {
	if x != nil {
		return x.MirrorSystem
	}
	return nil
}

func (x *GeometricCalibration_Extrinsics_MovableMirrorFormat) GetMirrorActuatorMapping() *MirrorActuatorMapping {
	if x != nil {
		return x.MirrorActuatorMapping
	}
	return nil
}

var File_geometric_calibration_proto protoreflect.FileDescriptor

var file_geometric_calibration_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x61, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6c,
	0x74, 0x70, 0x62, 0x1a, 0x13, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78,
	0x33, 0x78, 0x33, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x33, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x64, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x32, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x32, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x0d, 0x0a,
	0x14, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0b, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6c, 0x74, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x61, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x65, 0x0a,
	0x15, 0x70, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x5f, 0x63, 0x61, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6c,
	0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x61, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52,
	0x13, 0x70, 0x65, 0x72, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e,
	0x44, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x14, 0x6c, 0x65, 0x6e, 0x73, 0x5f, 0x68,
	0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x32, 0x46, 0x52, 0x11, 0x6c, 0x65, 0x6e, 0x73, 0x48, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x14, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x5f,
	0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x32, 0x46, 0x52, 0x12, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x75, 0x0a, 0x1c, 0x61, 0x6e, 0x67, 0x6c, 0x65,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f,
	0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x6c, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x61,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x52, 0x19, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x1a, 0xc9,
	0x02, 0x0a, 0x16, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f,
	0x63, 0x75, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x6f, 0x63,
	0x75, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x02, 0x52, 0x0d, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x45, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x49, 0x6e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x73, 0x52, 0x0a, 0x69, 0x6e, 0x74,
	0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x69,
	0x6e, 0x73, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x74,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x61, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69,
	0x63, 0x73, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x12,
	0x31, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x5f, 0x68, 0x61, 0x6c, 0x6c,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x66, 0x6f, 0x63,
	0x75, 0x73, 0x48, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0xd2, 0x01, 0x0a, 0x19, 0x41,
	0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x0c, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x46, 0x52, 0x0b, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x46, 0x52, 0x09, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6e, 0x67, 0x6c,
	0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x02, 0x52, 0x0b,
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x02, 0x52, 0x06, 0x74, 0x53,
	0x63, 0x61, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x02, 0x52, 0x07, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x1a,
	0x50, 0x0a, 0x0a, 0x49, 0x6e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x73, 0x12, 0x25, 0x0a,
	0x05, 0x6b, 0x5f, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c,
	0x74, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x33, 0x78, 0x33, 0x46, 0x52, 0x04,
	0x6b, 0x4d, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6d, 0x73, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x72, 0x6d, 0x73, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0xb0, 0x04, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x73,
	0x12, 0x53, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6f, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x45, 0x78, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x73, 0x2e, 0x43, 0x61, 0x6e, 0x6f, 0x6e,
	0x69, 0x63, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x6f,
	0x6e, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x62, 0x0a, 0x0f, 0x6d, 0x6f, 0x76, 0x65, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43,
	0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x69,
	0x6e, 0x73, 0x69, 0x63, 0x73, 0x2e, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x69, 0x72,
	0x72, 0x6f, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0e, 0x6d, 0x6f, 0x76, 0x65, 0x61,
	0x62, 0x6c, 0x65, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xc2, 0x01, 0x0a, 0x0f, 0x43, 0x61,
	0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x2c, 0x0a,
	0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x33, 0x78, 0x33,
	0x46, 0x52, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x0b, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x33, 0x46, 0x52,
	0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x6f, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x73, 0x74, 0x65, 0x72, 0x65, 0x6f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x2d, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x72, 0x65, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xa3,
	0x01, 0x0a, 0x13, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x37, 0x0a, 0x0d, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6c, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x52, 0x0c, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12,
	0x53, 0x0a, 0x17, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x41, 0x63,
	0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x15, 0x6d,
	0x69, 0x72, 0x72, 0x6f, 0x72, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x22, 0x2e, 0x0a, 0x0a, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x47, 0x4c, 0x55, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x4f, 0x56, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x02, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x6c, 0x74, 0x70, 0x62, 0x3b, 0x6c,
	0x74, 0x70, 0x62,
}

var (
	file_geometric_calibration_proto_rawDescOnce sync.Once
	file_geometric_calibration_proto_rawDescData = file_geometric_calibration_proto_rawDesc
)

func file_geometric_calibration_proto_rawDescGZIP() []byte {
	file_geometric_calibration_proto_rawDescOnce.Do(func() {
		file_geometric_calibration_proto_rawDescData = protoimpl.X.CompressGZIP(file_geometric_calibration_proto_rawDescData)
	})
	return file_geometric_calibration_proto_rawDescData
}

var file_geometric_calibration_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_geometric_calibration_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_geometric_calibration_proto_goTypes = []any{
	(GeometricCalibration_MirrorType)(0),                        // 0: ltpb.GeometricCalibration.MirrorType
	(*GeometricCalibration)(nil),                                // 1: ltpb.GeometricCalibration
	(*GeometricCalibration_CalibrationFocusBundle)(nil),         // 2: ltpb.GeometricCalibration.CalibrationFocusBundle
	(*GeometricCalibration_AngleOpticalCenterMapping)(nil),      // 3: ltpb.GeometricCalibration.AngleOpticalCenterMapping
	(*GeometricCalibration_Intrinsics)(nil),                     // 4: ltpb.GeometricCalibration.Intrinsics
	(*GeometricCalibration_Extrinsics)(nil),                     // 5: ltpb.GeometricCalibration.Extrinsics
	(*GeometricCalibration_Extrinsics_CanonicalFormat)(nil),     // 6: ltpb.GeometricCalibration.Extrinsics.CanonicalFormat
	(*GeometricCalibration_Extrinsics_MovableMirrorFormat)(nil), // 7: ltpb.GeometricCalibration.Extrinsics.MovableMirrorFormat
	(*Distortion)(nil),                                          // 8: ltpb.Distortion
	(*Range2F)(nil),                                             // 9: ltpb.Range2F
	(*DeviceTemp)(nil),                                          // 10: ltpb.DeviceTemp
	(*Point2F)(nil),                                             // 11: ltpb.Point2F
	(*Matrix3X3F)(nil),                                          // 12: ltpb.Matrix3x3F
	(*Point3F)(nil),                                             // 13: ltpb.Point3F
	(*MirrorSystem)(nil),                                        // 14: ltpb.MirrorSystem
	(*MirrorActuatorMapping)(nil),                               // 15: ltpb.MirrorActuatorMapping
}
var file_geometric_calibration_proto_depIdxs = []int32{
	0,  // 0: ltpb.GeometricCalibration.mirror_type:type_name -> ltpb.GeometricCalibration.MirrorType
	2,  // 1: ltpb.GeometricCalibration.per_focus_calibration:type_name -> ltpb.GeometricCalibration.CalibrationFocusBundle
	8,  // 2: ltpb.GeometricCalibration.distortion:type_name -> ltpb.Distortion
	9,  // 3: ltpb.GeometricCalibration.lens_hall_code_range:type_name -> ltpb.Range2F
	9,  // 4: ltpb.GeometricCalibration.focus_distance_range:type_name -> ltpb.Range2F
	3,  // 5: ltpb.GeometricCalibration.angle_optical_center_mapping:type_name -> ltpb.GeometricCalibration.AngleOpticalCenterMapping
	4,  // 6: ltpb.GeometricCalibration.CalibrationFocusBundle.intrinsics:type_name -> ltpb.GeometricCalibration.Intrinsics
	5,  // 7: ltpb.GeometricCalibration.CalibrationFocusBundle.extrinsics:type_name -> ltpb.GeometricCalibration.Extrinsics
	10, // 8: ltpb.GeometricCalibration.CalibrationFocusBundle.device_temp:type_name -> ltpb.DeviceTemp
	11, // 9: ltpb.GeometricCalibration.AngleOpticalCenterMapping.center_start:type_name -> ltpb.Point2F
	11, // 10: ltpb.GeometricCalibration.AngleOpticalCenterMapping.center_end:type_name -> ltpb.Point2F
	12, // 11: ltpb.GeometricCalibration.Intrinsics.k_mat:type_name -> ltpb.Matrix3x3F
	6,  // 12: ltpb.GeometricCalibration.Extrinsics.canonical:type_name -> ltpb.GeometricCalibration.Extrinsics.CanonicalFormat
	7,  // 13: ltpb.GeometricCalibration.Extrinsics.moveable_mirror:type_name -> ltpb.GeometricCalibration.Extrinsics.MovableMirrorFormat
	12, // 14: ltpb.GeometricCalibration.Extrinsics.CanonicalFormat.rotation:type_name -> ltpb.Matrix3x3F
	13, // 15: ltpb.GeometricCalibration.Extrinsics.CanonicalFormat.translation:type_name -> ltpb.Point3F
	14, // 16: ltpb.GeometricCalibration.Extrinsics.MovableMirrorFormat.mirror_system:type_name -> ltpb.MirrorSystem
	15, // 17: ltpb.GeometricCalibration.Extrinsics.MovableMirrorFormat.mirror_actuator_mapping:type_name -> ltpb.MirrorActuatorMapping
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_geometric_calibration_proto_init() }
func file_geometric_calibration_proto_init() {
	if File_geometric_calibration_proto != nil {
		return
	}
	file_mirror_system_proto_init()
	file_matrix3x3f_proto_init()
	file_point3f_proto_init()
	file_distortion_proto_init()
	file_range2f_proto_init()
	file_device_temp_proto_init()
	file_point2f_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_geometric_calibration_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GeometricCalibration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geometric_calibration_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GeometricCalibration_CalibrationFocusBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geometric_calibration_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GeometricCalibration_AngleOpticalCenterMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geometric_calibration_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GeometricCalibration_Intrinsics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geometric_calibration_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GeometricCalibration_Extrinsics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geometric_calibration_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GeometricCalibration_Extrinsics_CanonicalFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geometric_calibration_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GeometricCalibration_Extrinsics_MovableMirrorFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_geometric_calibration_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_geometric_calibration_proto_goTypes,
		DependencyIndexes: file_geometric_calibration_proto_depIdxs,
		EnumInfos:         file_geometric_calibration_proto_enumTypes,
		MessageInfos:      file_geometric_calibration_proto_msgTypes,
	}.Build()
	File_geometric_calibration_proto = out.File
	file_geometric_calibration_proto_rawDesc = nil
	file_geometric_calibration_proto_goTypes = nil
	file_geometric_calibration_proto_depIdxs = nil
}
