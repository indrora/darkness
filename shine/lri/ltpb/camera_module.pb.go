// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0--rc1
// source: camera_module.proto

package ltpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CameraModule_AFInfo_AFMode int32

const (
	CameraModule_AFInfo_AUTO CameraModule_AFInfo_AFMode = 0
)

// Enum value maps for CameraModule_AFInfo_AFMode.
var (
	CameraModule_AFInfo_AFMode_name = map[int32]string{
		0: "AUTO",
	}
	CameraModule_AFInfo_AFMode_value = map[string]int32{
		"AUTO": 0,
	}
)

func (x CameraModule_AFInfo_AFMode) Enum() *CameraModule_AFInfo_AFMode {
	p := new(CameraModule_AFInfo_AFMode)
	*p = x
	return p
}

func (x CameraModule_AFInfo_AFMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CameraModule_AFInfo_AFMode) Descriptor() protoreflect.EnumDescriptor {
	return file_camera_module_proto_enumTypes[0].Descriptor()
}

func (CameraModule_AFInfo_AFMode) Type() protoreflect.EnumType {
	return &file_camera_module_proto_enumTypes[0]
}

func (x CameraModule_AFInfo_AFMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CameraModule_AFInfo_AFMode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CameraModule_AFInfo_AFMode(num)
	return nil
}

// Deprecated: Use CameraModule_AFInfo_AFMode.Descriptor instead.
func (CameraModule_AFInfo_AFMode) EnumDescriptor() ([]byte, []int) {
	return file_camera_module_proto_rawDescGZIP(), []int{0, 0, 0}
}

type CameraModule_Surface_FormatType int32

const (
	CameraModule_Surface_RAW_BAYER_JPEG   CameraModule_Surface_FormatType = 0
	CameraModule_Surface_RAW_RESERVED_0   CameraModule_Surface_FormatType = 1
	CameraModule_Surface_RAW_RESERVED_1   CameraModule_Surface_FormatType = 2
	CameraModule_Surface_RAW_RESERVED_2   CameraModule_Surface_FormatType = 3
	CameraModule_Surface_RAW_RESERVED_3   CameraModule_Surface_FormatType = 4
	CameraModule_Surface_RAW_RESERVED_4   CameraModule_Surface_FormatType = 5
	CameraModule_Surface_RAW_RESERVED_5   CameraModule_Surface_FormatType = 6
	CameraModule_Surface_RAW_PACKED_10BPP CameraModule_Surface_FormatType = 7
	CameraModule_Surface_RAW_PACKED_12BPP CameraModule_Surface_FormatType = 8
	CameraModule_Surface_RAW_PACKED_14BPP CameraModule_Surface_FormatType = 9
)

// Enum value maps for CameraModule_Surface_FormatType.
var (
	CameraModule_Surface_FormatType_name = map[int32]string{
		0: "RAW_BAYER_JPEG",
		1: "RAW_RESERVED_0",
		2: "RAW_RESERVED_1",
		3: "RAW_RESERVED_2",
		4: "RAW_RESERVED_3",
		5: "RAW_RESERVED_4",
		6: "RAW_RESERVED_5",
		7: "RAW_PACKED_10BPP",
		8: "RAW_PACKED_12BPP",
		9: "RAW_PACKED_14BPP",
	}
	CameraModule_Surface_FormatType_value = map[string]int32{
		"RAW_BAYER_JPEG":   0,
		"RAW_RESERVED_0":   1,
		"RAW_RESERVED_1":   2,
		"RAW_RESERVED_2":   3,
		"RAW_RESERVED_3":   4,
		"RAW_RESERVED_4":   5,
		"RAW_RESERVED_5":   6,
		"RAW_PACKED_10BPP": 7,
		"RAW_PACKED_12BPP": 8,
		"RAW_PACKED_14BPP": 9,
	}
)

func (x CameraModule_Surface_FormatType) Enum() *CameraModule_Surface_FormatType {
	p := new(CameraModule_Surface_FormatType)
	*p = x
	return p
}

func (x CameraModule_Surface_FormatType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CameraModule_Surface_FormatType) Descriptor() protoreflect.EnumDescriptor {
	return file_camera_module_proto_enumTypes[1].Descriptor()
}

func (CameraModule_Surface_FormatType) Type() protoreflect.EnumType {
	return &file_camera_module_proto_enumTypes[1]
}

func (x CameraModule_Surface_FormatType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CameraModule_Surface_FormatType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CameraModule_Surface_FormatType(num)
	return nil
}

// Deprecated: Use CameraModule_Surface_FormatType.Descriptor instead.
func (CameraModule_Surface_FormatType) EnumDescriptor() ([]byte, []int) {
	return file_camera_module_proto_rawDescGZIP(), []int{0, 1, 0}
}

type CameraModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AfInfo                 *CameraModule_AFInfo  `protobuf:"bytes,1,opt,name=af_info,json=afInfo" json:"af_info,omitempty"`
	Id                     *CameraID             `protobuf:"varint,2,req,name=id,enum=ltpb.CameraID" json:"id,omitempty"`
	IsEnabled              *bool                 `protobuf:"varint,3,opt,name=is_enabled,json=isEnabled,def=1" json:"is_enabled,omitempty"`
	MirrorPosition         *int32                `protobuf:"varint,4,opt,name=mirror_position,json=mirrorPosition,def=0" json:"mirror_position,omitempty"`
	LensPosition           *int32                `protobuf:"varint,5,req,name=lens_position,json=lensPosition" json:"lens_position,omitempty"`
	SensorAnalogGain       *float32              `protobuf:"fixed32,7,req,name=sensor_analog_gain,json=sensorAnalogGain" json:"sensor_analog_gain,omitempty"`
	SensorExposure         *uint64               `protobuf:"varint,8,req,name=sensor_exposure,json=sensorExposure" json:"sensor_exposure,omitempty"`
	SensorDataSurface      *CameraModule_Surface `protobuf:"bytes,9,req,name=sensor_data_surface,json=sensorDataSurface" json:"sensor_data_surface,omitempty"`
	SensorTemparature      *int32                `protobuf:"zigzag32,10,opt,name=sensor_temparature,json=sensorTemparature" json:"sensor_temparature,omitempty"`
	SensorIsHorizontalFlip *bool                 `protobuf:"varint,11,opt,name=sensor_is_horizontal_flip,json=sensorIsHorizontalFlip,def=0" json:"sensor_is_horizontal_flip,omitempty"`
	SensorIsVerticalFlip   *bool                 `protobuf:"varint,12,opt,name=sensor_is_vertical_flip,json=sensorIsVerticalFlip,def=0" json:"sensor_is_vertical_flip,omitempty"`
	SensorBayerRedOverride *Point2I              `protobuf:"bytes,13,opt,name=sensor_bayer_red_override,json=sensorBayerRedOverride" json:"sensor_bayer_red_override,omitempty"`
	SensorDigitalGain      *float32              `protobuf:"fixed32,14,opt,name=sensor_digital_gain,json=sensorDigitalGain" json:"sensor_digital_gain,omitempty"`
	FrameIndex             *uint32               `protobuf:"varint,15,opt,name=frame_index,json=frameIndex" json:"frame_index,omitempty"`
	SensorDpcOn            *bool                 `protobuf:"varint,16,opt,name=sensor_dpc_on,json=sensorDpcOn,def=1" json:"sensor_dpc_on,omitempty"`
	SensorExpStartOffset   *int32                `protobuf:"zigzag32,17,opt,name=sensor_exp_start_offset,json=sensorExpStartOffset" json:"sensor_exp_start_offset,omitempty"`
	SensorScanSpeed        *float32              `protobuf:"fixed32,18,opt,name=sensor_scan_speed,json=sensorScanSpeed" json:"sensor_scan_speed,omitempty"`
}

// Default values for CameraModule fields.
const (
	Default_CameraModule_IsEnabled              = bool(true)
	Default_CameraModule_MirrorPosition         = int32(0)
	Default_CameraModule_SensorIsHorizontalFlip = bool(false)
	Default_CameraModule_SensorIsVerticalFlip   = bool(false)
	Default_CameraModule_SensorDpcOn            = bool(true)
)

func (x *CameraModule) Reset() {
	*x = CameraModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_module_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CameraModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CameraModule) ProtoMessage() {}

func (x *CameraModule) ProtoReflect() protoreflect.Message {
	mi := &file_camera_module_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CameraModule.ProtoReflect.Descriptor instead.
func (*CameraModule) Descriptor() ([]byte, []int) {
	return file_camera_module_proto_rawDescGZIP(), []int{0}
}

func (x *CameraModule) GetAfInfo() *CameraModule_AFInfo {
	if x != nil {
		return x.AfInfo
	}
	return nil
}

func (x *CameraModule) GetId() CameraID {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return CameraID_A1
}

func (x *CameraModule) GetIsEnabled() bool {
	if x != nil && x.IsEnabled != nil {
		return *x.IsEnabled
	}
	return Default_CameraModule_IsEnabled
}

func (x *CameraModule) GetMirrorPosition() int32 {
	if x != nil && x.MirrorPosition != nil {
		return *x.MirrorPosition
	}
	return Default_CameraModule_MirrorPosition
}

func (x *CameraModule) GetLensPosition() int32 {
	if x != nil && x.LensPosition != nil {
		return *x.LensPosition
	}
	return 0
}

func (x *CameraModule) GetSensorAnalogGain() float32 {
	if x != nil && x.SensorAnalogGain != nil {
		return *x.SensorAnalogGain
	}
	return 0
}

func (x *CameraModule) GetSensorExposure() uint64 {
	if x != nil && x.SensorExposure != nil {
		return *x.SensorExposure
	}
	return 0
}

func (x *CameraModule) GetSensorDataSurface() *CameraModule_Surface {
	if x != nil {
		return x.SensorDataSurface
	}
	return nil
}

func (x *CameraModule) GetSensorTemparature() int32 {
	if x != nil && x.SensorTemparature != nil {
		return *x.SensorTemparature
	}
	return 0
}

func (x *CameraModule) GetSensorIsHorizontalFlip() bool {
	if x != nil && x.SensorIsHorizontalFlip != nil {
		return *x.SensorIsHorizontalFlip
	}
	return Default_CameraModule_SensorIsHorizontalFlip
}

func (x *CameraModule) GetSensorIsVerticalFlip() bool {
	if x != nil && x.SensorIsVerticalFlip != nil {
		return *x.SensorIsVerticalFlip
	}
	return Default_CameraModule_SensorIsVerticalFlip
}

func (x *CameraModule) GetSensorBayerRedOverride() *Point2I {
	if x != nil {
		return x.SensorBayerRedOverride
	}
	return nil
}

func (x *CameraModule) GetSensorDigitalGain() float32 {
	if x != nil && x.SensorDigitalGain != nil {
		return *x.SensorDigitalGain
	}
	return 0
}

func (x *CameraModule) GetFrameIndex() uint32 {
	if x != nil && x.FrameIndex != nil {
		return *x.FrameIndex
	}
	return 0
}

func (x *CameraModule) GetSensorDpcOn() bool {
	if x != nil && x.SensorDpcOn != nil {
		return *x.SensorDpcOn
	}
	return Default_CameraModule_SensorDpcOn
}

func (x *CameraModule) GetSensorExpStartOffset() int32 {
	if x != nil && x.SensorExpStartOffset != nil {
		return *x.SensorExpStartOffset
	}
	return 0
}

func (x *CameraModule) GetSensorScanSpeed() float32 {
	if x != nil && x.SensorScanSpeed != nil {
		return *x.SensorScanSpeed
	}
	return 0
}

type CameraModule_AFInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode                   *CameraModule_AFInfo_AFMode `protobuf:"varint,1,req,name=mode,enum=ltpb.CameraModule_AFInfo_AFMode" json:"mode,omitempty"`
	RoiCenter              *Point2F                    `protobuf:"bytes,2,opt,name=roi_center,json=roiCenter" json:"roi_center,omitempty"`
	DisparityFocusDistance *float32                    `protobuf:"fixed32,3,opt,name=disparity_focus_distance,json=disparityFocusDistance" json:"disparity_focus_distance,omitempty"`
	ContrastFocusDistance  *float32                    `protobuf:"fixed32,4,opt,name=contrast_focus_distance,json=contrastFocusDistance" json:"contrast_focus_distance,omitempty"`
	LensTimeout            *bool                       `protobuf:"varint,5,opt,name=lens_timeout,json=lensTimeout" json:"lens_timeout,omitempty"`
	MirrorTimeout          *bool                       `protobuf:"varint,6,opt,name=mirror_timeout,json=mirrorTimeout" json:"mirror_timeout,omitempty"`
	MirrorPosition         *int32                      `protobuf:"varint,7,opt,name=mirror_position,json=mirrorPosition" json:"mirror_position,omitempty"`
}

func (x *CameraModule_AFInfo) Reset() {
	*x = CameraModule_AFInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_module_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CameraModule_AFInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CameraModule_AFInfo) ProtoMessage() {}

func (x *CameraModule_AFInfo) ProtoReflect() protoreflect.Message {
	mi := &file_camera_module_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CameraModule_AFInfo.ProtoReflect.Descriptor instead.
func (*CameraModule_AFInfo) Descriptor() ([]byte, []int) {
	return file_camera_module_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CameraModule_AFInfo) GetMode() CameraModule_AFInfo_AFMode {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return CameraModule_AFInfo_AUTO
}

func (x *CameraModule_AFInfo) GetRoiCenter() *Point2F {
	if x != nil {
		return x.RoiCenter
	}
	return nil
}

func (x *CameraModule_AFInfo) GetDisparityFocusDistance() float32 {
	if x != nil && x.DisparityFocusDistance != nil {
		return *x.DisparityFocusDistance
	}
	return 0
}

func (x *CameraModule_AFInfo) GetContrastFocusDistance() float32 {
	if x != nil && x.ContrastFocusDistance != nil {
		return *x.ContrastFocusDistance
	}
	return 0
}

func (x *CameraModule_AFInfo) GetLensTimeout() bool {
	if x != nil && x.LensTimeout != nil {
		return *x.LensTimeout
	}
	return false
}

func (x *CameraModule_AFInfo) GetMirrorTimeout() bool {
	if x != nil && x.MirrorTimeout != nil {
		return *x.MirrorTimeout
	}
	return false
}

func (x *CameraModule_AFInfo) GetMirrorPosition() int32 {
	if x != nil && x.MirrorPosition != nil {
		return *x.MirrorPosition
	}
	return 0
}

type CameraModule_Surface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start      *Point2I                         `protobuf:"bytes,1,req,name=start" json:"start,omitempty"`
	Size       *Point2I                         `protobuf:"bytes,2,req,name=size" json:"size,omitempty"`
	Format     *CameraModule_Surface_FormatType `protobuf:"varint,3,req,name=format,enum=ltpb.CameraModule_Surface_FormatType" json:"format,omitempty"`
	RowStride  *uint32                          `protobuf:"varint,4,req,name=row_stride,json=rowStride" json:"row_stride,omitempty"`
	DataOffset *uint64                          `protobuf:"varint,5,req,name=data_offset,json=dataOffset" json:"data_offset,omitempty"`
	DataScale  *Point2F                         `protobuf:"bytes,6,opt,name=data_scale,json=dataScale" json:"data_scale,omitempty"`
}

func (x *CameraModule_Surface) Reset() {
	*x = CameraModule_Surface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_module_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CameraModule_Surface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CameraModule_Surface) ProtoMessage() {}

func (x *CameraModule_Surface) ProtoReflect() protoreflect.Message {
	mi := &file_camera_module_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CameraModule_Surface.ProtoReflect.Descriptor instead.
func (*CameraModule_Surface) Descriptor() ([]byte, []int) {
	return file_camera_module_proto_rawDescGZIP(), []int{0, 1}
}

func (x *CameraModule_Surface) GetStart() *Point2I {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *CameraModule_Surface) GetSize() *Point2I {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *CameraModule_Surface) GetFormat() CameraModule_Surface_FormatType {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return CameraModule_Surface_RAW_BAYER_JPEG
}

func (x *CameraModule_Surface) GetRowStride() uint32 {
	if x != nil && x.RowStride != nil {
		return *x.RowStride
	}
	return 0
}

func (x *CameraModule_Surface) GetDataOffset() uint64 {
	if x != nil && x.DataOffset != nil {
		return *x.DataOffset
	}
	return 0
}

func (x *CameraModule_Surface) GetDataScale() *Point2F {
	if x != nil {
		return x.DataScale
	}
	return nil
}

var File_camera_module_proto protoreflect.FileDescriptor

var file_camera_module_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6c, 0x74, 0x70, 0x62, 0x1a, 0x0f, 0x63, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x5f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x32, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x32, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9e, 0x0d, 0x0a, 0x0c, 0x43,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x61,
	0x66, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c,
	0x74, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x41, 0x46, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x61, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x6c, 0x74,
	0x70, 0x62, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x0f, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30,
	0x52, 0x0e, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x65, 0x6e, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x65, 0x6e, 0x73, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f,
	0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x67, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x02, 0x28,
	0x02, 0x52, 0x10, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x41, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x47,
	0x61, 0x69, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x65, 0x78,
	0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x12, 0x4a, 0x0a, 0x13,
	0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x18, 0x09, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x74, 0x70, 0x62,
	0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x75,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x61, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x11, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x54, 0x65, 0x6d, 0x70,
	0x61, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x40, 0x0a, 0x19, 0x73, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x5f, 0x69, 0x73, 0x5f, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f,
	0x66, 0x6c, 0x69, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73,
	0x65, 0x52, 0x16, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x49, 0x73, 0x48, 0x6f, 0x72, 0x69, 0x7a,
	0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x46, 0x6c, 0x69, 0x70, 0x12, 0x3c, 0x0a, 0x17, 0x73, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x5f, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f,
	0x66, 0x6c, 0x69, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73,
	0x65, 0x52, 0x14, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x49, 0x73, 0x56, 0x65, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x46, 0x6c, 0x69, 0x70, 0x12, 0x48, 0x0a, 0x19, 0x73, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x5f, 0x62, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x64, 0x5f, 0x6f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x74, 0x70,
	0x62, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x49, 0x52, 0x16, 0x73, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x42, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x64, 0x69, 0x67, 0x69,
	0x74, 0x61, 0x6c, 0x5f, 0x67, 0x61, 0x69, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11,
	0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x47, 0x61, 0x69,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x64, 0x70, 0x63,
	0x5f, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52,
	0x0b, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x44, 0x70, 0x63, 0x4f, 0x6e, 0x12, 0x35, 0x0a, 0x17,
	0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x11, 0x52, 0x14, 0x73,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x45, 0x78, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x73, 0x63,
	0x61, 0x6e, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f,
	0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x53, 0x63, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x1a,
	0xe5, 0x02, 0x0a, 0x06, 0x41, 0x46, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e,
	0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x46, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x46, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x12, 0x2c, 0x0a, 0x0a, 0x72, 0x6f, 0x69, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x32, 0x46, 0x52, 0x09, 0x72, 0x6f, 0x69, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x38,
	0x0a, 0x18, 0x64, 0x69, 0x73, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x6f, 0x63, 0x75,
	0x73, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x16, 0x64, 0x69, 0x73, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x46, 0x6f, 0x63, 0x75, 0x73,
	0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x73, 0x74, 0x5f, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x73, 0x74, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x65, 0x6e, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6c, 0x65, 0x6e, 0x73, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6d, 0x69, 0x72,
	0x72, 0x6f, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x69,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x12, 0x0a, 0x06, 0x41, 0x46, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x41, 0x55, 0x54, 0x4f, 0x10, 0x00, 0x1a, 0xdb, 0x03, 0x0a, 0x07, 0x53, 0x75, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32,
	0x49, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x32, 0x49, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6c, 0x74,
	0x70, 0x62, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f,
	0x77, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x09,
	0x72, 0x6f, 0x77, 0x53, 0x74, 0x72, 0x69, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0a,
	0x64, 0x61, 0x74, 0x61, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x46, 0x52, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x0a, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x41, 0x57, 0x5f, 0x42,
	0x41, 0x59, 0x45, 0x52, 0x5f, 0x4a, 0x50, 0x45, 0x47, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52,
	0x41, 0x57, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x44, 0x5f, 0x30, 0x10, 0x01, 0x12,
	0x12, 0x0a, 0x0e, 0x52, 0x41, 0x57, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x44, 0x5f,
	0x31, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x41, 0x57, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x52,
	0x56, 0x45, 0x44, 0x5f, 0x32, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x41, 0x57, 0x5f, 0x52,
	0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x44, 0x5f, 0x33, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x52,
	0x41, 0x57, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x44, 0x5f, 0x34, 0x10, 0x05, 0x12,
	0x12, 0x0a, 0x0e, 0x52, 0x41, 0x57, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x44, 0x5f,
	0x35, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x41, 0x57, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45,
	0x44, 0x5f, 0x31, 0x30, 0x42, 0x50, 0x50, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x41, 0x57,
	0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x44, 0x5f, 0x31, 0x32, 0x42, 0x50, 0x50, 0x10, 0x08, 0x12,
	0x14, 0x0a, 0x10, 0x52, 0x41, 0x57, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x44, 0x5f, 0x31, 0x34,
	0x42, 0x50, 0x50, 0x10, 0x09, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07, 0x42, 0x0d, 0x5a, 0x0b, 0x2e,
	0x2f, 0x6c, 0x74, 0x70, 0x62, 0x3b, 0x6c, 0x74, 0x70, 0x62,
}

var (
	file_camera_module_proto_rawDescOnce sync.Once
	file_camera_module_proto_rawDescData = file_camera_module_proto_rawDesc
)

func file_camera_module_proto_rawDescGZIP() []byte {
	file_camera_module_proto_rawDescOnce.Do(func() {
		file_camera_module_proto_rawDescData = protoimpl.X.CompressGZIP(file_camera_module_proto_rawDescData)
	})
	return file_camera_module_proto_rawDescData
}

var file_camera_module_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_camera_module_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_camera_module_proto_goTypes = []any{
	(CameraModule_AFInfo_AFMode)(0),      // 0: ltpb.CameraModule.AFInfo.AFMode
	(CameraModule_Surface_FormatType)(0), // 1: ltpb.CameraModule.Surface.FormatType
	(*CameraModule)(nil),                 // 2: ltpb.CameraModule
	(*CameraModule_AFInfo)(nil),          // 3: ltpb.CameraModule.AFInfo
	(*CameraModule_Surface)(nil),         // 4: ltpb.CameraModule.Surface
	(CameraID)(0),                        // 5: ltpb.CameraID
	(*Point2I)(nil),                      // 6: ltpb.Point2I
	(*Point2F)(nil),                      // 7: ltpb.Point2F
}
var file_camera_module_proto_depIdxs = []int32{
	3,  // 0: ltpb.CameraModule.af_info:type_name -> ltpb.CameraModule.AFInfo
	5,  // 1: ltpb.CameraModule.id:type_name -> ltpb.CameraID
	4,  // 2: ltpb.CameraModule.sensor_data_surface:type_name -> ltpb.CameraModule.Surface
	6,  // 3: ltpb.CameraModule.sensor_bayer_red_override:type_name -> ltpb.Point2I
	0,  // 4: ltpb.CameraModule.AFInfo.mode:type_name -> ltpb.CameraModule.AFInfo.AFMode
	7,  // 5: ltpb.CameraModule.AFInfo.roi_center:type_name -> ltpb.Point2F
	6,  // 6: ltpb.CameraModule.Surface.start:type_name -> ltpb.Point2I
	6,  // 7: ltpb.CameraModule.Surface.size:type_name -> ltpb.Point2I
	1,  // 8: ltpb.CameraModule.Surface.format:type_name -> ltpb.CameraModule.Surface.FormatType
	7,  // 9: ltpb.CameraModule.Surface.data_scale:type_name -> ltpb.Point2F
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_camera_module_proto_init() }
func file_camera_module_proto_init() {
	if File_camera_module_proto != nil {
		return
	}
	file_camera_id_proto_init()
	file_point2i_proto_init()
	file_point2f_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_camera_module_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CameraModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_module_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CameraModule_AFInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_module_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CameraModule_Surface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_camera_module_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_camera_module_proto_goTypes,
		DependencyIndexes: file_camera_module_proto_depIdxs,
		EnumInfos:         file_camera_module_proto_enumTypes,
		MessageInfos:      file_camera_module_proto_msgTypes,
	}.Build()
	File_camera_module_proto = out.File
	file_camera_module_proto_rawDesc = nil
	file_camera_module_proto_goTypes = nil
	file_camera_module_proto_depIdxs = nil
}
