// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0--rc1
// source: hw_info.proto

package ltpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CameraModuleHwInfo_LensType int32

const (
	CameraModuleHwInfo_LENS_UNKNOWN  CameraModuleHwInfo_LensType = 0
	CameraModuleHwInfo_LENS_SHOWIN   CameraModuleHwInfo_LensType = 1
	CameraModuleHwInfo_LENS_LARGAN   CameraModuleHwInfo_LensType = 2
	CameraModuleHwInfo_LENS_SUNNY    CameraModuleHwInfo_LensType = 3
	CameraModuleHwInfo_LENS_KANTATSU CameraModuleHwInfo_LensType = 4
)

// Enum value maps for CameraModuleHwInfo_LensType.
var (
	CameraModuleHwInfo_LensType_name = map[int32]string{
		0: "LENS_UNKNOWN",
		1: "LENS_SHOWIN",
		2: "LENS_LARGAN",
		3: "LENS_SUNNY",
		4: "LENS_KANTATSU",
	}
	CameraModuleHwInfo_LensType_value = map[string]int32{
		"LENS_UNKNOWN":  0,
		"LENS_SHOWIN":   1,
		"LENS_LARGAN":   2,
		"LENS_SUNNY":    3,
		"LENS_KANTATSU": 4,
	}
)

func (x CameraModuleHwInfo_LensType) Enum() *CameraModuleHwInfo_LensType {
	p := new(CameraModuleHwInfo_LensType)
	*p = x
	return p
}

func (x CameraModuleHwInfo_LensType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CameraModuleHwInfo_LensType) Descriptor() protoreflect.EnumDescriptor {
	return file_hw_info_proto_enumTypes[0].Descriptor()
}

func (CameraModuleHwInfo_LensType) Type() protoreflect.EnumType {
	return &file_hw_info_proto_enumTypes[0]
}

func (x CameraModuleHwInfo_LensType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CameraModuleHwInfo_LensType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CameraModuleHwInfo_LensType(num)
	return nil
}

// Deprecated: Use CameraModuleHwInfo_LensType.Descriptor instead.
func (CameraModuleHwInfo_LensType) EnumDescriptor() ([]byte, []int) {
	return file_hw_info_proto_rawDescGZIP(), []int{0, 0}
}

type CameraModuleHwInfo_MirrorActuatorType int32

const (
	CameraModuleHwInfo_MIRROR_ACTUATOR_UNKNOWN CameraModuleHwInfo_MirrorActuatorType = 0
	CameraModuleHwInfo_MIRROR_ACTUATOR_PZT     CameraModuleHwInfo_MirrorActuatorType = 1
)

// Enum value maps for CameraModuleHwInfo_MirrorActuatorType.
var (
	CameraModuleHwInfo_MirrorActuatorType_name = map[int32]string{
		0: "MIRROR_ACTUATOR_UNKNOWN",
		1: "MIRROR_ACTUATOR_PZT",
	}
	CameraModuleHwInfo_MirrorActuatorType_value = map[string]int32{
		"MIRROR_ACTUATOR_UNKNOWN": 0,
		"MIRROR_ACTUATOR_PZT":     1,
	}
)

func (x CameraModuleHwInfo_MirrorActuatorType) Enum() *CameraModuleHwInfo_MirrorActuatorType {
	p := new(CameraModuleHwInfo_MirrorActuatorType)
	*p = x
	return p
}

func (x CameraModuleHwInfo_MirrorActuatorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CameraModuleHwInfo_MirrorActuatorType) Descriptor() protoreflect.EnumDescriptor {
	return file_hw_info_proto_enumTypes[1].Descriptor()
}

func (CameraModuleHwInfo_MirrorActuatorType) Type() protoreflect.EnumType {
	return &file_hw_info_proto_enumTypes[1]
}

func (x CameraModuleHwInfo_MirrorActuatorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CameraModuleHwInfo_MirrorActuatorType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CameraModuleHwInfo_MirrorActuatorType(num)
	return nil
}

// Deprecated: Use CameraModuleHwInfo_MirrorActuatorType.Descriptor instead.
func (CameraModuleHwInfo_MirrorActuatorType) EnumDescriptor() ([]byte, []int) {
	return file_hw_info_proto_rawDescGZIP(), []int{0, 1}
}

type CameraModuleHwInfo_MirrorType int32

const (
	CameraModuleHwInfo_MIRROR_UNKNOWN        CameraModuleHwInfo_MirrorType = 0
	CameraModuleHwInfo_MIRROR_DIELECTRIC_SNX CameraModuleHwInfo_MirrorType = 1
	CameraModuleHwInfo_MIRROR_SILVER_ZUISHO  CameraModuleHwInfo_MirrorType = 2
)

// Enum value maps for CameraModuleHwInfo_MirrorType.
var (
	CameraModuleHwInfo_MirrorType_name = map[int32]string{
		0: "MIRROR_UNKNOWN",
		1: "MIRROR_DIELECTRIC_SNX",
		2: "MIRROR_SILVER_ZUISHO",
	}
	CameraModuleHwInfo_MirrorType_value = map[string]int32{
		"MIRROR_UNKNOWN":        0,
		"MIRROR_DIELECTRIC_SNX": 1,
		"MIRROR_SILVER_ZUISHO":  2,
	}
)

func (x CameraModuleHwInfo_MirrorType) Enum() *CameraModuleHwInfo_MirrorType {
	p := new(CameraModuleHwInfo_MirrorType)
	*p = x
	return p
}

func (x CameraModuleHwInfo_MirrorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CameraModuleHwInfo_MirrorType) Descriptor() protoreflect.EnumDescriptor {
	return file_hw_info_proto_enumTypes[2].Descriptor()
}

func (CameraModuleHwInfo_MirrorType) Type() protoreflect.EnumType {
	return &file_hw_info_proto_enumTypes[2]
}

func (x CameraModuleHwInfo_MirrorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CameraModuleHwInfo_MirrorType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CameraModuleHwInfo_MirrorType(num)
	return nil
}

// Deprecated: Use CameraModuleHwInfo_MirrorType.Descriptor instead.
func (CameraModuleHwInfo_MirrorType) EnumDescriptor() ([]byte, []int) {
	return file_hw_info_proto_rawDescGZIP(), []int{0, 2}
}

type CameraModuleHwInfo_LensActuatorType int32

const (
	CameraModuleHwInfo_LENS_ACTUATOR_UNKNOWN CameraModuleHwInfo_LensActuatorType = 0
	CameraModuleHwInfo_LENS_ACTUATOR_SHICOH  CameraModuleHwInfo_LensActuatorType = 1
	CameraModuleHwInfo_LENS_ACTUATOR_PZT     CameraModuleHwInfo_LensActuatorType = 2
)

// Enum value maps for CameraModuleHwInfo_LensActuatorType.
var (
	CameraModuleHwInfo_LensActuatorType_name = map[int32]string{
		0: "LENS_ACTUATOR_UNKNOWN",
		1: "LENS_ACTUATOR_SHICOH",
		2: "LENS_ACTUATOR_PZT",
	}
	CameraModuleHwInfo_LensActuatorType_value = map[string]int32{
		"LENS_ACTUATOR_UNKNOWN": 0,
		"LENS_ACTUATOR_SHICOH":  1,
		"LENS_ACTUATOR_PZT":     2,
	}
)

func (x CameraModuleHwInfo_LensActuatorType) Enum() *CameraModuleHwInfo_LensActuatorType {
	p := new(CameraModuleHwInfo_LensActuatorType)
	*p = x
	return p
}

func (x CameraModuleHwInfo_LensActuatorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CameraModuleHwInfo_LensActuatorType) Descriptor() protoreflect.EnumDescriptor {
	return file_hw_info_proto_enumTypes[3].Descriptor()
}

func (CameraModuleHwInfo_LensActuatorType) Type() protoreflect.EnumType {
	return &file_hw_info_proto_enumTypes[3]
}

func (x CameraModuleHwInfo_LensActuatorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CameraModuleHwInfo_LensActuatorType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CameraModuleHwInfo_LensActuatorType(num)
	return nil
}

// Deprecated: Use CameraModuleHwInfo_LensActuatorType.Descriptor instead.
func (CameraModuleHwInfo_LensActuatorType) EnumDescriptor() ([]byte, []int) {
	return file_hw_info_proto_rawDescGZIP(), []int{0, 3}
}

type HwInfo_FlashType int32

const (
	HwInfo_FLASH_UNKNOWN      HwInfo_FlashType = 0
	HwInfo_FLASH_OSRAM_CBLPM1 HwInfo_FlashType = 1
)

// Enum value maps for HwInfo_FlashType.
var (
	HwInfo_FlashType_name = map[int32]string{
		0: "FLASH_UNKNOWN",
		1: "FLASH_OSRAM_CBLPM1",
	}
	HwInfo_FlashType_value = map[string]int32{
		"FLASH_UNKNOWN":      0,
		"FLASH_OSRAM_CBLPM1": 1,
	}
)

func (x HwInfo_FlashType) Enum() *HwInfo_FlashType {
	p := new(HwInfo_FlashType)
	*p = x
	return p
}

func (x HwInfo_FlashType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HwInfo_FlashType) Descriptor() protoreflect.EnumDescriptor {
	return file_hw_info_proto_enumTypes[4].Descriptor()
}

func (HwInfo_FlashType) Type() protoreflect.EnumType {
	return &file_hw_info_proto_enumTypes[4]
}

func (x HwInfo_FlashType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *HwInfo_FlashType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = HwInfo_FlashType(num)
	return nil
}

// Deprecated: Use HwInfo_FlashType.Descriptor instead.
func (HwInfo_FlashType) EnumDescriptor() ([]byte, []int) {
	return file_hw_info_proto_rawDescGZIP(), []int{1, 0}
}

type HwInfo_ToFType int32

const (
	HwInfo_TOF_UNKNOWN        HwInfo_ToFType = 0
	HwInfo_TOF_STMICRO_VL53L0 HwInfo_ToFType = 1
)

// Enum value maps for HwInfo_ToFType.
var (
	HwInfo_ToFType_name = map[int32]string{
		0: "TOF_UNKNOWN",
		1: "TOF_STMICRO_VL53L0",
	}
	HwInfo_ToFType_value = map[string]int32{
		"TOF_UNKNOWN":        0,
		"TOF_STMICRO_VL53L0": 1,
	}
)

func (x HwInfo_ToFType) Enum() *HwInfo_ToFType {
	p := new(HwInfo_ToFType)
	*p = x
	return p
}

func (x HwInfo_ToFType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HwInfo_ToFType) Descriptor() protoreflect.EnumDescriptor {
	return file_hw_info_proto_enumTypes[5].Descriptor()
}

func (HwInfo_ToFType) Type() protoreflect.EnumType {
	return &file_hw_info_proto_enumTypes[5]
}

func (x HwInfo_ToFType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *HwInfo_ToFType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = HwInfo_ToFType(num)
	return nil
}

// Deprecated: Use HwInfo_ToFType.Descriptor instead.
func (HwInfo_ToFType) EnumDescriptor() ([]byte, []int) {
	return file_hw_info_proto_rawDescGZIP(), []int{1, 1}
}

type HwInfo_ModelType int32

const (
	HwInfo_MODEL_P1   HwInfo_ModelType = 0
	HwInfo_MODEL_P1_1 HwInfo_ModelType = 1
	HwInfo_MODEL_P2   HwInfo_ModelType = 2
)

// Enum value maps for HwInfo_ModelType.
var (
	HwInfo_ModelType_name = map[int32]string{
		0: "MODEL_P1",
		1: "MODEL_P1_1",
		2: "MODEL_P2",
	}
	HwInfo_ModelType_value = map[string]int32{
		"MODEL_P1":   0,
		"MODEL_P1_1": 1,
		"MODEL_P2":   2,
	}
)

func (x HwInfo_ModelType) Enum() *HwInfo_ModelType {
	p := new(HwInfo_ModelType)
	*p = x
	return p
}

func (x HwInfo_ModelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HwInfo_ModelType) Descriptor() protoreflect.EnumDescriptor {
	return file_hw_info_proto_enumTypes[6].Descriptor()
}

func (HwInfo_ModelType) Type() protoreflect.EnumType {
	return &file_hw_info_proto_enumTypes[6]
}

func (x HwInfo_ModelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *HwInfo_ModelType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = HwInfo_ModelType(num)
	return nil
}

// Deprecated: Use HwInfo_ModelType.Descriptor instead.
func (HwInfo_ModelType) EnumDescriptor() ([]byte, []int) {
	return file_hw_info_proto_rawDescGZIP(), []int{1, 2}
}

type CameraModuleHwInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *CameraID                              `protobuf:"varint,1,req,name=id,enum=ltpb.CameraID" json:"id,omitempty"`
	Sensor         *SensorType                            `protobuf:"varint,2,req,name=sensor,enum=ltpb.SensorType" json:"sensor,omitempty"`
	Lens           *CameraModuleHwInfo_LensType           `protobuf:"varint,3,opt,name=lens,enum=ltpb.CameraModuleHwInfo_LensType,def=0" json:"lens,omitempty"`
	MirrorActuator *CameraModuleHwInfo_MirrorActuatorType `protobuf:"varint,4,opt,name=mirror_actuator,json=mirrorActuator,enum=ltpb.CameraModuleHwInfo_MirrorActuatorType,def=0" json:"mirror_actuator,omitempty"`
	Mirror         *CameraModuleHwInfo_MirrorType         `protobuf:"varint,5,opt,name=mirror,enum=ltpb.CameraModuleHwInfo_MirrorType,def=0" json:"mirror,omitempty"`
}

// Default values for CameraModuleHwInfo fields.
const (
	Default_CameraModuleHwInfo_Lens           = CameraModuleHwInfo_LENS_UNKNOWN
	Default_CameraModuleHwInfo_MirrorActuator = CameraModuleHwInfo_MIRROR_ACTUATOR_UNKNOWN
	Default_CameraModuleHwInfo_Mirror         = CameraModuleHwInfo_MIRROR_UNKNOWN
)

func (x *CameraModuleHwInfo) Reset() {
	*x = CameraModuleHwInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hw_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CameraModuleHwInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CameraModuleHwInfo) ProtoMessage() {}

func (x *CameraModuleHwInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hw_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CameraModuleHwInfo.ProtoReflect.Descriptor instead.
func (*CameraModuleHwInfo) Descriptor() ([]byte, []int) {
	return file_hw_info_proto_rawDescGZIP(), []int{0}
}

func (x *CameraModuleHwInfo) GetId() CameraID {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return CameraID_A1
}

func (x *CameraModuleHwInfo) GetSensor() SensorType {
	if x != nil && x.Sensor != nil {
		return *x.Sensor
	}
	return SensorType_SENSOR_UNKNOWN
}

func (x *CameraModuleHwInfo) GetLens() CameraModuleHwInfo_LensType {
	if x != nil && x.Lens != nil {
		return *x.Lens
	}
	return Default_CameraModuleHwInfo_Lens
}

func (x *CameraModuleHwInfo) GetMirrorActuator() CameraModuleHwInfo_MirrorActuatorType {
	if x != nil && x.MirrorActuator != nil {
		return *x.MirrorActuator
	}
	return Default_CameraModuleHwInfo_MirrorActuator
}

func (x *CameraModuleHwInfo) GetMirror() CameraModuleHwInfo_MirrorType {
	if x != nil && x.Mirror != nil {
		return *x.Mirror
	}
	return Default_CameraModuleHwInfo_Mirror
}

type HwInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Camera       []*CameraModuleHwInfo `protobuf:"bytes,1,rep,name=camera" json:"camera,omitempty"`
	Flash        *HwInfo_FlashType     `protobuf:"varint,2,opt,name=flash,enum=ltpb.HwInfo_FlashType,def=0" json:"flash,omitempty"`
	Tof          *HwInfo_ToFType       `protobuf:"varint,3,opt,name=tof,enum=ltpb.HwInfo_ToFType,def=0" json:"tof,omitempty"`
	Model        *HwInfo_ModelType     `protobuf:"varint,4,opt,name=model,enum=ltpb.HwInfo_ModelType" json:"model,omitempty"`
	Manufacturer *string               `protobuf:"bytes,5,opt,name=manufacturer" json:"manufacturer,omitempty"`
}

// Default values for HwInfo fields.
const (
	Default_HwInfo_Flash = HwInfo_FLASH_UNKNOWN
	Default_HwInfo_Tof   = HwInfo_TOF_UNKNOWN
)

func (x *HwInfo) Reset() {
	*x = HwInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hw_info_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HwInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HwInfo) ProtoMessage() {}

func (x *HwInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hw_info_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HwInfo.ProtoReflect.Descriptor instead.
func (*HwInfo) Descriptor() ([]byte, []int) {
	return file_hw_info_proto_rawDescGZIP(), []int{1}
}

func (x *HwInfo) GetCamera() []*CameraModuleHwInfo {
	if x != nil {
		return x.Camera
	}
	return nil
}

func (x *HwInfo) GetFlash() HwInfo_FlashType {
	if x != nil && x.Flash != nil {
		return *x.Flash
	}
	return Default_HwInfo_Flash
}

func (x *HwInfo) GetTof() HwInfo_ToFType {
	if x != nil && x.Tof != nil {
		return *x.Tof
	}
	return Default_HwInfo_Tof
}

func (x *HwInfo) GetModel() HwInfo_ModelType {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return HwInfo_MODEL_P1
}

func (x *HwInfo) GetManufacturer() string {
	if x != nil && x.Manufacturer != nil {
		return *x.Manufacturer
	}
	return ""
}

var File_hw_info_proto protoreflect.FileDescriptor

var file_hw_info_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x68, 0x77, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x04, 0x6c, 0x74, 0x70, 0x62, 0x1a, 0x11, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x5f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x05, 0x0a, 0x12, 0x43, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x77, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x6c,
	0x74, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x28, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x04, 0x6c, 0x65,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e,
	0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x77, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x4c, 0x65, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x0c, 0x4c, 0x45, 0x4e,
	0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x52, 0x04, 0x6c, 0x65, 0x6e, 0x73, 0x12,
	0x6d, 0x0a, 0x0f, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e,
	0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x77, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x17, 0x4d, 0x49, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x41, 0x43,
	0x54, 0x55, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x52, 0x0e,
	0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x4b,
	0x0a, 0x06, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23,
	0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x48, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x3a, 0x0e, 0x4d, 0x49, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x52, 0x06, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x61, 0x0a, 0x08, 0x4c,
	0x65, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x45, 0x4e, 0x53, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x4e,
	0x53, 0x5f, 0x53, 0x48, 0x4f, 0x57, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45,
	0x4e, 0x53, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x41, 0x4e, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4c,
	0x45, 0x4e, 0x53, 0x5f, 0x53, 0x55, 0x4e, 0x4e, 0x59, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4c,
	0x45, 0x4e, 0x53, 0x5f, 0x4b, 0x41, 0x4e, 0x54, 0x41, 0x54, 0x53, 0x55, 0x10, 0x04, 0x22, 0x4a,
	0x0a, 0x12, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x49, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x41,
	0x43, 0x54, 0x55, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x49, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x55,
	0x41, 0x54, 0x4f, 0x52, 0x5f, 0x50, 0x5a, 0x54, 0x10, 0x01, 0x22, 0x55, 0x0a, 0x0a, 0x4d, 0x69,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x49, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15,
	0x4d, 0x49, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x44, 0x49, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x52, 0x49,
	0x43, 0x5f, 0x53, 0x4e, 0x58, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x49, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x53, 0x49, 0x4c, 0x56, 0x45, 0x52, 0x5f, 0x5a, 0x55, 0x49, 0x53, 0x48, 0x4f, 0x10,
	0x02, 0x22, 0x5e, 0x0a, 0x10, 0x4c, 0x65, 0x6e, 0x73, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x4c, 0x45, 0x4e, 0x53, 0x5f, 0x41, 0x43,
	0x54, 0x55, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x18, 0x0a, 0x14, 0x4c, 0x45, 0x4e, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x55, 0x41, 0x54, 0x4f,
	0x52, 0x5f, 0x53, 0x48, 0x49, 0x43, 0x4f, 0x48, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x4c, 0x45,
	0x4e, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x55, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x50, 0x5a, 0x54, 0x10,
	0x02, 0x22, 0xa3, 0x03, 0x0a, 0x06, 0x48, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x06,
	0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c,
	0x74, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x48, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x3b,
	0x0a, 0x05, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x6c, 0x74, 0x70, 0x62, 0x2e, 0x48, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x46, 0x6c, 0x61, 0x73,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x0d, 0x46, 0x4c, 0x41, 0x53, 0x48, 0x5f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x12, 0x33, 0x0a, 0x03, 0x74,
	0x6f, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e,
	0x48, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x6f, 0x46, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x0b,
	0x54, 0x4f, 0x46, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x52, 0x03, 0x74, 0x6f, 0x66,
	0x12, 0x2c, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x48, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x22,
	0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x22, 0x36, 0x0a, 0x09, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x11, 0x0a, 0x0d, 0x46, 0x4c, 0x41, 0x53, 0x48, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x4c, 0x41, 0x53, 0x48, 0x5f, 0x4f, 0x53, 0x52, 0x41,
	0x4d, 0x5f, 0x43, 0x42, 0x4c, 0x50, 0x4d, 0x31, 0x10, 0x01, 0x22, 0x32, 0x0a, 0x07, 0x54, 0x6f,
	0x46, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x4f, 0x46, 0x5f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x4f, 0x46, 0x5f, 0x53, 0x54,
	0x4d, 0x49, 0x43, 0x52, 0x4f, 0x5f, 0x56, 0x4c, 0x35, 0x33, 0x4c, 0x30, 0x10, 0x01, 0x22, 0x37,
	0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x4d,
	0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x50, 0x31, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x4f, 0x44,
	0x45, 0x4c, 0x5f, 0x50, 0x31, 0x5f, 0x31, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x4f, 0x44,
	0x45, 0x4c, 0x5f, 0x50, 0x32, 0x10, 0x02, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x6c, 0x74, 0x70,
	0x62, 0x3b, 0x6c, 0x74, 0x70, 0x62,
}

var (
	file_hw_info_proto_rawDescOnce sync.Once
	file_hw_info_proto_rawDescData = file_hw_info_proto_rawDesc
)

func file_hw_info_proto_rawDescGZIP() []byte {
	file_hw_info_proto_rawDescOnce.Do(func() {
		file_hw_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_hw_info_proto_rawDescData)
	})
	return file_hw_info_proto_rawDescData
}

var file_hw_info_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_hw_info_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_hw_info_proto_goTypes = []any{
	(CameraModuleHwInfo_LensType)(0),           // 0: ltpb.CameraModuleHwInfo.LensType
	(CameraModuleHwInfo_MirrorActuatorType)(0), // 1: ltpb.CameraModuleHwInfo.MirrorActuatorType
	(CameraModuleHwInfo_MirrorType)(0),         // 2: ltpb.CameraModuleHwInfo.MirrorType
	(CameraModuleHwInfo_LensActuatorType)(0),   // 3: ltpb.CameraModuleHwInfo.LensActuatorType
	(HwInfo_FlashType)(0),                      // 4: ltpb.HwInfo.FlashType
	(HwInfo_ToFType)(0),                        // 5: ltpb.HwInfo.ToFType
	(HwInfo_ModelType)(0),                      // 6: ltpb.HwInfo.ModelType
	(*CameraModuleHwInfo)(nil),                 // 7: ltpb.CameraModuleHwInfo
	(*HwInfo)(nil),                             // 8: ltpb.HwInfo
	(CameraID)(0),                              // 9: ltpb.CameraID
	(SensorType)(0),                            // 10: ltpb.SensorType
}
var file_hw_info_proto_depIdxs = []int32{
	9,  // 0: ltpb.CameraModuleHwInfo.id:type_name -> ltpb.CameraID
	10, // 1: ltpb.CameraModuleHwInfo.sensor:type_name -> ltpb.SensorType
	0,  // 2: ltpb.CameraModuleHwInfo.lens:type_name -> ltpb.CameraModuleHwInfo.LensType
	1,  // 3: ltpb.CameraModuleHwInfo.mirror_actuator:type_name -> ltpb.CameraModuleHwInfo.MirrorActuatorType
	2,  // 4: ltpb.CameraModuleHwInfo.mirror:type_name -> ltpb.CameraModuleHwInfo.MirrorType
	7,  // 5: ltpb.HwInfo.camera:type_name -> ltpb.CameraModuleHwInfo
	4,  // 6: ltpb.HwInfo.flash:type_name -> ltpb.HwInfo.FlashType
	5,  // 7: ltpb.HwInfo.tof:type_name -> ltpb.HwInfo.ToFType
	6,  // 8: ltpb.HwInfo.model:type_name -> ltpb.HwInfo.ModelType
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_hw_info_proto_init() }
func file_hw_info_proto_init() {
	if File_hw_info_proto != nil {
		return
	}
	file_sensor_type_proto_init()
	file_camera_id_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_hw_info_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CameraModuleHwInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hw_info_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*HwInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hw_info_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hw_info_proto_goTypes,
		DependencyIndexes: file_hw_info_proto_depIdxs,
		EnumInfos:         file_hw_info_proto_enumTypes,
		MessageInfos:      file_hw_info_proto_msgTypes,
	}.Build()
	File_hw_info_proto = out.File
	file_hw_info_proto_rawDesc = nil
	file_hw_info_proto_goTypes = nil
	file_hw_info_proto_depIdxs = nil
}
