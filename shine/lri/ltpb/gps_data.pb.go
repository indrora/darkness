// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0--rc1
// source: gps_data.proto

package ltpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GPSData_ProcessingMethod int32

const (
	GPSData_PROCESSING_METHOD_UNKNOWN GPSData_ProcessingMethod = 0
	GPSData_PROCESSING_METHOD_GPS     GPSData_ProcessingMethod = 1
	GPSData_PROCESSING_METHOD_CELLID  GPSData_ProcessingMethod = 2
	GPSData_PROCESSING_METHOD_WLAN    GPSData_ProcessingMethod = 3
	GPSData_PROCESSING_METHOD_MANUAL  GPSData_ProcessingMethod = 4
	GPSData_PROCESSING_METHOD_FUSED   GPSData_ProcessingMethod = 5
)

// Enum value maps for GPSData_ProcessingMethod.
var (
	GPSData_ProcessingMethod_name = map[int32]string{
		0: "PROCESSING_METHOD_UNKNOWN",
		1: "PROCESSING_METHOD_GPS",
		2: "PROCESSING_METHOD_CELLID",
		3: "PROCESSING_METHOD_WLAN",
		4: "PROCESSING_METHOD_MANUAL",
		5: "PROCESSING_METHOD_FUSED",
	}
	GPSData_ProcessingMethod_value = map[string]int32{
		"PROCESSING_METHOD_UNKNOWN": 0,
		"PROCESSING_METHOD_GPS":     1,
		"PROCESSING_METHOD_CELLID":  2,
		"PROCESSING_METHOD_WLAN":    3,
		"PROCESSING_METHOD_MANUAL":  4,
		"PROCESSING_METHOD_FUSED":   5,
	}
)

func (x GPSData_ProcessingMethod) Enum() *GPSData_ProcessingMethod {
	p := new(GPSData_ProcessingMethod)
	*p = x
	return p
}

func (x GPSData_ProcessingMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GPSData_ProcessingMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_gps_data_proto_enumTypes[0].Descriptor()
}

func (GPSData_ProcessingMethod) Type() protoreflect.EnumType {
	return &file_gps_data_proto_enumTypes[0]
}

func (x GPSData_ProcessingMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GPSData_ProcessingMethod) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GPSData_ProcessingMethod(num)
	return nil
}

// Deprecated: Use GPSData_ProcessingMethod.Descriptor instead.
func (GPSData_ProcessingMethod) EnumDescriptor() ([]byte, []int) {
	return file_gps_data_proto_rawDescGZIP(), []int{0, 0}
}

type GPSData_ReferenceNorth int32

const (
	GPSData_REFERENCE_NORTH_MAGNETIC GPSData_ReferenceNorth = 0
	GPSData_REFERENCE_NORTH_TRUE     GPSData_ReferenceNorth = 1
)

// Enum value maps for GPSData_ReferenceNorth.
var (
	GPSData_ReferenceNorth_name = map[int32]string{
		0: "REFERENCE_NORTH_MAGNETIC",
		1: "REFERENCE_NORTH_TRUE",
	}
	GPSData_ReferenceNorth_value = map[string]int32{
		"REFERENCE_NORTH_MAGNETIC": 0,
		"REFERENCE_NORTH_TRUE":     1,
	}
)

func (x GPSData_ReferenceNorth) Enum() *GPSData_ReferenceNorth {
	p := new(GPSData_ReferenceNorth)
	*p = x
	return p
}

func (x GPSData_ReferenceNorth) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GPSData_ReferenceNorth) Descriptor() protoreflect.EnumDescriptor {
	return file_gps_data_proto_enumTypes[1].Descriptor()
}

func (GPSData_ReferenceNorth) Type() protoreflect.EnumType {
	return &file_gps_data_proto_enumTypes[1]
}

func (x GPSData_ReferenceNorth) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GPSData_ReferenceNorth) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GPSData_ReferenceNorth(num)
	return nil
}

// Deprecated: Use GPSData_ReferenceNorth.Descriptor instead.
func (GPSData_ReferenceNorth) EnumDescriptor() ([]byte, []int) {
	return file_gps_data_proto_rawDescGZIP(), []int{0, 1}
}

type GPSData_ReferenceAltitude int32

const (
	GPSData_REFERENCE_ALTITUDE_SEA_LEVEL GPSData_ReferenceAltitude = 0
)

// Enum value maps for GPSData_ReferenceAltitude.
var (
	GPSData_ReferenceAltitude_name = map[int32]string{
		0: "REFERENCE_ALTITUDE_SEA_LEVEL",
	}
	GPSData_ReferenceAltitude_value = map[string]int32{
		"REFERENCE_ALTITUDE_SEA_LEVEL": 0,
	}
)

func (x GPSData_ReferenceAltitude) Enum() *GPSData_ReferenceAltitude {
	p := new(GPSData_ReferenceAltitude)
	*p = x
	return p
}

func (x GPSData_ReferenceAltitude) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GPSData_ReferenceAltitude) Descriptor() protoreflect.EnumDescriptor {
	return file_gps_data_proto_enumTypes[2].Descriptor()
}

func (GPSData_ReferenceAltitude) Type() protoreflect.EnumType {
	return &file_gps_data_proto_enumTypes[2]
}

func (x GPSData_ReferenceAltitude) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GPSData_ReferenceAltitude) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GPSData_ReferenceAltitude(num)
	return nil
}

// Deprecated: Use GPSData_ReferenceAltitude.Descriptor instead.
func (GPSData_ReferenceAltitude) EnumDescriptor() ([]byte, []int) {
	return file_gps_data_proto_rawDescGZIP(), []int{0, 2}
}

type GPSData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude         *float64                  `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude        *float64                  `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
	Timestamp        *uint64                   `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	Dop              *float64                  `protobuf:"fixed64,4,opt,name=dop" json:"dop,omitempty"`
	Track            *GPSData_Track            `protobuf:"bytes,5,opt,name=track" json:"track,omitempty"`
	Heading          *GPSData_Heading          `protobuf:"bytes,6,opt,name=heading" json:"heading,omitempty"`
	Altitude         *GPSData_Altitude         `protobuf:"bytes,7,opt,name=altitude" json:"altitude,omitempty"`
	Speed            *float64                  `protobuf:"fixed64,8,opt,name=speed" json:"speed,omitempty"`
	ProcessingMethod *GPSData_ProcessingMethod `protobuf:"varint,9,opt,name=processing_method,json=processingMethod,enum=ltpb.GPSData_ProcessingMethod" json:"processing_method,omitempty"`
}

func (x *GPSData) Reset() {
	*x = GPSData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gps_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPSData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPSData) ProtoMessage() {}

func (x *GPSData) ProtoReflect() protoreflect.Message {
	mi := &file_gps_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPSData.ProtoReflect.Descriptor instead.
func (*GPSData) Descriptor() ([]byte, []int) {
	return file_gps_data_proto_rawDescGZIP(), []int{0}
}

func (x *GPSData) GetLatitude() float64 {
	if x != nil && x.Latitude != nil {
		return *x.Latitude
	}
	return 0
}

func (x *GPSData) GetLongitude() float64 {
	if x != nil && x.Longitude != nil {
		return *x.Longitude
	}
	return 0
}

func (x *GPSData) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *GPSData) GetDop() float64 {
	if x != nil && x.Dop != nil {
		return *x.Dop
	}
	return 0
}

func (x *GPSData) GetTrack() *GPSData_Track {
	if x != nil {
		return x.Track
	}
	return nil
}

func (x *GPSData) GetHeading() *GPSData_Heading {
	if x != nil {
		return x.Heading
	}
	return nil
}

func (x *GPSData) GetAltitude() *GPSData_Altitude {
	if x != nil {
		return x.Altitude
	}
	return nil
}

func (x *GPSData) GetSpeed() float64 {
	if x != nil && x.Speed != nil {
		return *x.Speed
	}
	return 0
}

func (x *GPSData) GetProcessingMethod() GPSData_ProcessingMethod {
	if x != nil && x.ProcessingMethod != nil {
		return *x.ProcessingMethod
	}
	return GPSData_PROCESSING_METHOD_UNKNOWN
}

type GPSData_Track struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *float64                `protobuf:"fixed64,1,req,name=value" json:"value,omitempty"`
	Ref   *GPSData_ReferenceNorth `protobuf:"varint,2,req,name=ref,enum=ltpb.GPSData_ReferenceNorth" json:"ref,omitempty"`
}

func (x *GPSData_Track) Reset() {
	*x = GPSData_Track{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gps_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPSData_Track) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPSData_Track) ProtoMessage() {}

func (x *GPSData_Track) ProtoReflect() protoreflect.Message {
	mi := &file_gps_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPSData_Track.ProtoReflect.Descriptor instead.
func (*GPSData_Track) Descriptor() ([]byte, []int) {
	return file_gps_data_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GPSData_Track) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *GPSData_Track) GetRef() GPSData_ReferenceNorth {
	if x != nil && x.Ref != nil {
		return *x.Ref
	}
	return GPSData_REFERENCE_NORTH_MAGNETIC
}

type GPSData_Heading struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *float64                `protobuf:"fixed64,1,req,name=value" json:"value,omitempty"`
	Ref   *GPSData_ReferenceNorth `protobuf:"varint,2,req,name=ref,enum=ltpb.GPSData_ReferenceNorth" json:"ref,omitempty"`
}

func (x *GPSData_Heading) Reset() {
	*x = GPSData_Heading{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gps_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPSData_Heading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPSData_Heading) ProtoMessage() {}

func (x *GPSData_Heading) ProtoReflect() protoreflect.Message {
	mi := &file_gps_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPSData_Heading.ProtoReflect.Descriptor instead.
func (*GPSData_Heading) Descriptor() ([]byte, []int) {
	return file_gps_data_proto_rawDescGZIP(), []int{0, 1}
}

func (x *GPSData_Heading) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *GPSData_Heading) GetRef() GPSData_ReferenceNorth {
	if x != nil && x.Ref != nil {
		return *x.Ref
	}
	return GPSData_REFERENCE_NORTH_MAGNETIC
}

type GPSData_Altitude struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *float64                   `protobuf:"fixed64,1,req,name=value" json:"value,omitempty"`
	Ref   *GPSData_ReferenceAltitude `protobuf:"varint,2,req,name=ref,enum=ltpb.GPSData_ReferenceAltitude" json:"ref,omitempty"`
}

func (x *GPSData_Altitude) Reset() {
	*x = GPSData_Altitude{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gps_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPSData_Altitude) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPSData_Altitude) ProtoMessage() {}

func (x *GPSData_Altitude) ProtoReflect() protoreflect.Message {
	mi := &file_gps_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPSData_Altitude.ProtoReflect.Descriptor instead.
func (*GPSData_Altitude) Descriptor() ([]byte, []int) {
	return file_gps_data_proto_rawDescGZIP(), []int{0, 2}
}

func (x *GPSData_Altitude) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *GPSData_Altitude) GetRef() GPSData_ReferenceAltitude {
	if x != nil && x.Ref != nil {
		return *x.Ref
	}
	return GPSData_REFERENCE_ALTITUDE_SEA_LEVEL
}

var File_gps_data_proto protoreflect.FileDescriptor

var file_gps_data_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x67, 0x70, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x04, 0x6c, 0x74, 0x70, 0x62, 0x22, 0xa0, 0x07, 0x0a, 0x07, 0x47, 0x50, 0x53, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x64, 0x6f, 0x70, 0x12, 0x29, 0x0a, 0x05,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x74,
	0x70, 0x62, 0x2e, 0x47, 0x50, 0x53, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x2f, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e,
	0x47, 0x50, 0x53, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x74, 0x70,
	0x62, 0x2e, 0x47, 0x50, 0x53, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x12, 0x4b, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x6c, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x50, 0x53, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x10, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x1a,
	0x4d, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e,
	0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6c, 0x74,
	0x70, 0x62, 0x2e, 0x47, 0x50, 0x53, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x52, 0x03, 0x72, 0x65, 0x66, 0x1a, 0x4f,
	0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x2e, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6c,
	0x74, 0x70, 0x62, 0x2e, 0x47, 0x50, 0x53, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x52, 0x03, 0x72, 0x65, 0x66, 0x1a,
	0x53, 0x0a, 0x08, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x31, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x1f,
	0x2e, 0x6c, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x50, 0x53, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x52,
	0x03, 0x72, 0x65, 0x66, 0x22, 0xc1, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x52, 0x4f,
	0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x43,
	0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x47, 0x50,
	0x53, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e,
	0x47, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x43, 0x45, 0x4c, 0x4c, 0x49, 0x44, 0x10,
	0x02, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f,
	0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x57, 0x4c, 0x41, 0x4e, 0x10, 0x03, 0x12, 0x1c, 0x0a,
	0x18, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x45, 0x54, 0x48,
	0x4f, 0x44, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x50,
	0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44,
	0x5f, 0x46, 0x55, 0x53, 0x45, 0x44, 0x10, 0x05, 0x22, 0x48, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45,
	0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x5f, 0x4d, 0x41,
	0x47, 0x4e, 0x45, 0x54, 0x49, 0x43, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x46, 0x45,
	0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x5f, 0x54, 0x52, 0x55, 0x45,
	0x10, 0x01, 0x22, 0x35, 0x0a, 0x11, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x41,
	0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x45, 0x46, 0x45, 0x52,
	0x45, 0x4e, 0x43, 0x45, 0x5f, 0x41, 0x4c, 0x54, 0x49, 0x54, 0x55, 0x44, 0x45, 0x5f, 0x53, 0x45,
	0x41, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x10, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x6c,
	0x74, 0x70, 0x62, 0x3b, 0x6c, 0x74, 0x70, 0x62,
}

var (
	file_gps_data_proto_rawDescOnce sync.Once
	file_gps_data_proto_rawDescData = file_gps_data_proto_rawDesc
)

func file_gps_data_proto_rawDescGZIP() []byte {
	file_gps_data_proto_rawDescOnce.Do(func() {
		file_gps_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_gps_data_proto_rawDescData)
	})
	return file_gps_data_proto_rawDescData
}

var file_gps_data_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_gps_data_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_gps_data_proto_goTypes = []any{
	(GPSData_ProcessingMethod)(0),  // 0: ltpb.GPSData.ProcessingMethod
	(GPSData_ReferenceNorth)(0),    // 1: ltpb.GPSData.ReferenceNorth
	(GPSData_ReferenceAltitude)(0), // 2: ltpb.GPSData.ReferenceAltitude
	(*GPSData)(nil),                // 3: ltpb.GPSData
	(*GPSData_Track)(nil),          // 4: ltpb.GPSData.Track
	(*GPSData_Heading)(nil),        // 5: ltpb.GPSData.Heading
	(*GPSData_Altitude)(nil),       // 6: ltpb.GPSData.Altitude
}
var file_gps_data_proto_depIdxs = []int32{
	4, // 0: ltpb.GPSData.track:type_name -> ltpb.GPSData.Track
	5, // 1: ltpb.GPSData.heading:type_name -> ltpb.GPSData.Heading
	6, // 2: ltpb.GPSData.altitude:type_name -> ltpb.GPSData.Altitude
	0, // 3: ltpb.GPSData.processing_method:type_name -> ltpb.GPSData.ProcessingMethod
	1, // 4: ltpb.GPSData.Track.ref:type_name -> ltpb.GPSData.ReferenceNorth
	1, // 5: ltpb.GPSData.Heading.ref:type_name -> ltpb.GPSData.ReferenceNorth
	2, // 6: ltpb.GPSData.Altitude.ref:type_name -> ltpb.GPSData.ReferenceAltitude
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_gps_data_proto_init() }
func file_gps_data_proto_init() {
	if File_gps_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gps_data_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GPSData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gps_data_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GPSData_Track); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gps_data_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GPSData_Heading); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gps_data_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GPSData_Altitude); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gps_data_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gps_data_proto_goTypes,
		DependencyIndexes: file_gps_data_proto_depIdxs,
		EnumInfos:         file_gps_data_proto_enumTypes,
		MessageInfos:      file_gps_data_proto_msgTypes,
	}.Build()
	File_gps_data_proto = out.File
	file_gps_data_proto_rawDesc = nil
	file_gps_data_proto_goTypes = nil
	file_gps_data_proto_depIdxs = nil
}
