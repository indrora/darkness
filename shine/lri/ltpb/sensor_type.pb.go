// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0--rc1
// source: sensor_type.proto

package ltpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SensorType int32

const (
	SensorType_SENSOR_UNKNOWN     SensorType = 0
	SensorType_SENSOR_AR835       SensorType = 1
	SensorType_SENSOR_AR1335      SensorType = 2
	SensorType_SENSOR_AR1335_MONO SensorType = 3
	SensorType_SENSOR_IMX386      SensorType = 4
	SensorType_SENSOR_IMX386_MONO SensorType = 5
)

// Enum value maps for SensorType.
var (
	SensorType_name = map[int32]string{
		0: "SENSOR_UNKNOWN",
		1: "SENSOR_AR835",
		2: "SENSOR_AR1335",
		3: "SENSOR_AR1335_MONO",
		4: "SENSOR_IMX386",
		5: "SENSOR_IMX386_MONO",
	}
	SensorType_value = map[string]int32{
		"SENSOR_UNKNOWN":     0,
		"SENSOR_AR835":       1,
		"SENSOR_AR1335":      2,
		"SENSOR_AR1335_MONO": 3,
		"SENSOR_IMX386":      4,
		"SENSOR_IMX386_MONO": 5,
	}
)

func (x SensorType) Enum() *SensorType {
	p := new(SensorType)
	*p = x
	return p
}

func (x SensorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SensorType) Descriptor() protoreflect.EnumDescriptor {
	return file_sensor_type_proto_enumTypes[0].Descriptor()
}

func (SensorType) Type() protoreflect.EnumType {
	return &file_sensor_type_proto_enumTypes[0]
}

func (x SensorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SensorType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SensorType(num)
	return nil
}

// Deprecated: Use SensorType.Descriptor instead.
func (SensorType) EnumDescriptor() ([]byte, []int) {
	return file_sensor_type_proto_rawDescGZIP(), []int{0}
}

var File_sensor_type_proto protoreflect.FileDescriptor

var file_sensor_type_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6c, 0x74, 0x70, 0x62, 0x2a, 0x88, 0x01, 0x0a, 0x0a, 0x53, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x45, 0x4e, 0x53,
	0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x5f, 0x41, 0x52, 0x38, 0x33, 0x35, 0x10, 0x01, 0x12, 0x11,
	0x0a, 0x0d, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x5f, 0x41, 0x52, 0x31, 0x33, 0x33, 0x35, 0x10,
	0x02, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x5f, 0x41, 0x52, 0x31, 0x33,
	0x33, 0x35, 0x5f, 0x4d, 0x4f, 0x4e, 0x4f, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x45, 0x4e,
	0x53, 0x4f, 0x52, 0x5f, 0x49, 0x4d, 0x58, 0x33, 0x38, 0x36, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x5f, 0x49, 0x4d, 0x58, 0x33, 0x38, 0x36, 0x5f, 0x4d, 0x4f,
	0x4e, 0x4f, 0x10, 0x05, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x6c, 0x74, 0x70, 0x62, 0x3b, 0x6c,
	0x74, 0x70, 0x62,
}

var (
	file_sensor_type_proto_rawDescOnce sync.Once
	file_sensor_type_proto_rawDescData = file_sensor_type_proto_rawDesc
)

func file_sensor_type_proto_rawDescGZIP() []byte {
	file_sensor_type_proto_rawDescOnce.Do(func() {
		file_sensor_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_sensor_type_proto_rawDescData)
	})
	return file_sensor_type_proto_rawDescData
}

var file_sensor_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sensor_type_proto_goTypes = []any{
	(SensorType)(0), // 0: ltpb.SensorType
}
var file_sensor_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sensor_type_proto_init() }
func file_sensor_type_proto_init() {
	if File_sensor_type_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sensor_type_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sensor_type_proto_goTypes,
		DependencyIndexes: file_sensor_type_proto_depIdxs,
		EnumInfos:         file_sensor_type_proto_enumTypes,
	}.Build()
	File_sensor_type_proto = out.File
	file_sensor_type_proto_rawDesc = nil
	file_sensor_type_proto_goTypes = nil
	file_sensor_type_proto_depIdxs = nil
}
